var documenterSearchIndex = {"docs":
[{"location":"index.html","page":"Home","title":"Home","text":"CurrentModule = JMtk15","category":"page"},{"location":"index.html#JMtk15-Package-Documentation","page":"Home","title":"JMtk15 Package Documentation","text":"","category":"section"},{"location":"index.html","page":"Home","title":"Home","text":"Welcome to JMtk15, a Julia language package to leverage the NASA JPL MISR Toolkit (Mtk) C shared library [Version 1.5], a convenient and simplified programming interface to access MISR L1B2, L2, and MISR-HR, conventional and ancillary data products.","category":"page"},{"location":"index.html","page":"Home","title":"Home","text":"The Multi-angle Imaging SpectroRadiometer (MISR) instrument is one of five instruments aboard NASA's Earth Observation Terra satellite launched on 18 December 1999. MISR has been collecting data on the causes and effects of climate change in the atmosphere and at the planetary surface every day since 24 February 2000, and is expected to continue operating until early 2027. A wide range of geophysical products are available on a per-orbit basis at spatial resoultions varying between 275 m and 17.6 km, depending on the product. Higher-level (L3) products with a global coverage and at coarser spatial resolution are also available.","category":"page"},{"location":"index.html","page":"Home","title":"Home","text":"Detailed information on the scientific context of this project is available on-line from:","category":"page"},{"location":"index.html","page":"Home","title":"Home","text":"the NASA Terra mission,\nthe MISR instrument, which includes a complete bibliography of thousands of published papers and reports,\nthe NASA Atmospheric Science Data Center, and\nthe MISR Toolkit.","category":"page"},{"location":"index.html#Package-status-and-Acknowledgments","page":"Home","title":"Package status and Acknowledgments","text":"","category":"section"},{"location":"index.html","page":"Home","title":"Home","text":"The Julia functions described in this JMtk15 package are wrappers to a selection of some of the most useful C functions of Mtk. Functions for which one or more tests are available in the Test subdirectory are expected to work as described in those tests and in the associated documentation. Those for which tests are not available are currently under active development and may or may not work yet: this is Work in Progress (WIP). All functions and files published as part of this JMtk15 package are provided under the MIT License, i.e., without any warranty about the their usability or effectiveness in your own applications. See the LICENSE file in this repository for more details.","category":"page"},{"location":"index.html","page":"Home","title":"Home","text":"Generating this package would not have been possible without the professional help of Sebastian Val at JPL concerning MISR Toolkit (Mtk) and the benevolent support of @Gnimuc, @stevengj, @mkitti as well as many other contributors to the Julia Discourse Forum with respect to the Julia implementation.","category":"page"},{"location":"index.html","page":"Home","title":"Home","text":"Please check this site regularly for updates and send bug reports and suggestions through GitHub: I will attempt to address those in future releases, time permitting.","category":"page"},{"location":"index.html#Pre-requisites-and-Installation","page":"Home","title":"Pre-requisites and Installation","text":"","category":"section"},{"location":"index.html","page":"Home","title":"Home","text":"The effective use of this JMtk15 package requires access to the following resources:","category":"page"},{"location":"index.html","page":"Home","title":"Home","text":"the Mtk shared library libMisrToolkit.so.1.5.0,\na set of third party libraries supporting HDF and NetCDF file formats, as well as additional utilities, and\nMISR data files, as appropriate.","category":"page"},{"location":"index.html","page":"Home","title":"Home","text":"The Mtk and third party libraries can be installed on Intel x86_32 or x86_64 Linux, macOS, or Windows platforms as explained on the MISR Toolkit web site mentioned above. As of March 2023, the simplest approach to use this JMtk15 package on an Apple aarch_64 MacBook equipped with a M1 or M2 chip is to port an existing working installation from an Intel-based platform and run under the Rosetta 2 environment: All that is required is to copy the Mtk and /usr/local/hdfeoslibs directories in exactly the same locations on the Mx platform, and to use the x86_64 version of Julia (see the juliaup for more details on installing multiple versions of Julia). Platform-specific libraries for the aarch_64 architecture may be developed at a later stage.","category":"page"},{"location":"index.html","page":"Home","title":"Home","text":"MISR data are freely accessible from the NASA ASDC web site mentioned above.","category":"page"},{"location":"index.html","page":"Home","title":"Home","text":"Once those libraries and data files are set up, install this JMtk15 package and edit the main module file JMtk15.jl to point to the Mtk shared library and the MISR data directory, in the Package configuration section near the top of that file.","category":"page"},{"location":"index.html#Index-of-functions","page":"Home","title":"Index of functions","text":"","category":"section"},{"location":"index.html","page":"Home","title":"Home","text":"","category":"page"},{"location":"index.html#Main-module","page":"Home","title":"Main module","text":"","category":"section"},{"location":"index.html","page":"Home","title":"Home","text":"JMtk15","category":"page"},{"location":"index.html#JMtk15.JMtk15","page":"Home","title":"JMtk15.JMtk15","text":"using JMtk15\n\nPurpose:\n\nProvide Julia wrapper functions to the NASA JPL     MISR Toolkit C functions.\n\nLicensing:\n\nMtk C Library: Copyright © 2005 California Institute of Technology,   Caltech license.\nJulia wrapper: Copyright © 2023 Michel M. Verstraete,   MIT license.\n\nVersioning:\n\nMtk C Library: Version 1.5.\nJulia wrapper: Version 0.1.0 (2023-02-15).\n\nNotes:\n\nThis module allows one to use some of the C functions defined in the MISR Toolkit (Mtk) as if they were Julia functions. Please read the README.md file and the documentation for this package to determine which functions are available and how they can be used.\nThe MISR Toolkit (Mtk) itself must be installed on your computer before this JMtk15 package can be used. In particular, the location of the shared library libMisrToolkit.so in the file system must be specified as part of the configuration of this package.\nMISR data must be available on your computer, and their physical location must be specified as part of the configuration of this package.\nThis module must be imported before using any of the wrapper functions because it loads essential definitions and sets the location of resources (source files, test functions, documentation, data).\n\nExample:\n\njulia> using JMtk15\n[ Info: Precompiling JMtk15 [6c71635d-e68b-418f-880a-c8128ca9dc0a]\n\n\n\n\n\n","category":"module"},{"location":"index.html#Util","page":"Home","title":"Util","text":"","category":"section"},{"location":"index.html","page":"Home","title":"Home","text":"jMtkVersion\njMtkErrorMessage\njMtkDateTimeToJulian\njMtkJulianToDateTime","category":"page"},{"location":"index.html#JMtk15.jMtkVersion","page":"Home","title":"JMtk15.jMtkVersion","text":"version = jMtkVersion()\n\nPurpose:\n\nReport the version identifier of the MISR Toolkit (Mtk) library currently in use.\n\nLicensing:\n\nMtk C Library: Copyright © 2005 California Institute of Technology,   Caltech license.\nJulia wrapper: Copyright © 2023 Michel M. Verstraete,   MIT license.\n\nVersioning:\n\nMtk C Library: Version 1.5.\nJulia wrapper: Version 0.1.0 (2023-02-15).\n\nExample:\n\njulia> using JMtk15\n\njulia> version = jMtkVersion()\n\"1.5.0\"\n\n\n\n\n\n","category":"function"},{"location":"index.html#JMtk15.jMtkErrorMessage","page":"Home","title":"JMtk15.jMtkErrorMessage","text":"errmsg = jMtkErrorMessage(status)\n\nPurpose:\n\nReport the error message corresponding to the specified status code.\n\nLicensing:\n\nMtk C Library: Copyright © 2005 California Institute of Technology,   Caltech license.\nJulia wrapper: Copyright © 2023 Michel M. Verstraete,   MIT license.\n\nVersioning:\n\nMtk C Library: Version 1.5.\nJulia wrapper: Version 0.1.0 (2023-02-15).\n\nExamples:\n\njulia> using JMtk15\n\njulia> status = 0\n0\n\njulia> errmsg = jMtkErrorMessage(status)\n\"SUCCESS\"\n\njulia> status = 3\n3\n\njulia> errmsg = jMtkErrorMessage(status)\n\"BAD ARGUMENT\"\n\n\n\n\n\n","category":"function"},{"location":"index.html#JMtk15.jMtkDateTimeToJulian","page":"Home","title":"JMtk15.jMtkDateTimeToJulian","text":"juldate = jMtkDateTimeToJulian(datetime)\n\nPurpose:\n\nConvert a date and time (in ISO 8601 format) into a Julian date.\n\nLicensing:\n\nMtk C Library: Copyright © 2005 California Institute of Technology,   Caltech license.\nJulia wrapper: Copyright © 2023 Michel M. Verstraete,   MIT license.\n\nVersioning:\n\nMtk C Library: Version 1.5.\nJulia wrapper: Version 0.1.0 (2023-02-15).\n\nExample:\n\njulia> using JMtk15\n\njulia> datetime = \"2002-05-02T02:00:00Z\"\n\"2002-05-02T02:00:00Z\"\n\njulia> juldate = jMtkDateTimeToJulian(datetime)\n2.4523965833333335e6\n\n\n\n\n\n","category":"function"},{"location":"index.html#JMtk15.jMtkJulianToDateTime","page":"Home","title":"JMtk15.jMtkJulianToDateTime","text":"datetime = jMtkJulianToDateTime(juldate)\n\nPurpose:\n\nConvert a Julian date into date and time (in ISO 8601 format).\n\nLicensing:\n\nMtk C Library: Copyright © 2005 California Institute of Technology,   Caltech license.\nJulia wrapper: Copyright © 2023 Michel M. Verstraete,   MIT license.\n\nVersioning:\n\nMtk C Library: Version 1.5.\nJulia wrapper: Version 0.1.0 (2023-02-15).\n\nExample:\n\njulia> using JMtk15\n\njulia> juldate = 2.4523965833333335e6\n2.4523965833333335e6\n\njulia> datetime = jMtkJulianToDateTime(juldate)\n\"2002-05-02T02:00:00Z\"\n\n\n\n\n\n","category":"function"},{"location":"index.html#FileQuery","page":"Home","title":"FileQuery","text":"","category":"section"},{"location":"index.html","page":"Home","title":"Home","text":"jMtkFileType\njMtkFileLGID\njMtkFileVersion\njMtkFillValueGet\njMtkFileAttrList\njMtkFileAttrGet\njMtkGridAttrList\njMtkFieldAttrList\njMtkFileToPath\njMtkFileToOrbit\njMtkFileToBlockRange\njMtkFileToGridList\njMtkFileGridToFieldList\njMtkFileGridToNativeFieldList\njMtkFileGridFieldToDimList\njMtkFileGridFieldCheck\njMtkFileGridFieldToDataType\njMtkFileGridToResolution\njMtkFileCoreMetaDataQuery\njMtkMakeFilename\njMtkFindFileList\njMtkFileBlockMetaList\njMtkFileBlockMetaFieldList\njMtkFileBlockMetaFieldRead\njMtkTimeMetaRead","category":"page"},{"location":"index.html#JMtk15.jMtkFileType","page":"Home","title":"JMtk15.jMtkFileType","text":"filetype = jMtkFileType(filename)\n\nPurpose:\n\nDetermine the MISR product file type.\n\nLicensing:\n\nMtk C Library: Copyright © 2005 California Institute of Technology,   Caltech license.\nJulia wrapper: Copyright © 2023 Michel M. Verstraete,   MIT license.\n\nVersioning:\n\nMtk C Library: Version 1.5.\nJulia wrapper: Version 0.1.0 (2023-02-15).\n\nExample:\n\njulia> using JMtk15\n\njulia> filename = JMtk15_data * \"MISR/MISR_AM1_AS_LAND_P168_O068050_F08_0023.nc\"\n\"/Users/michel/Codes/Julia/JMtk15/data/MISR/MISR_AM1_AS_LAND_P168_O068050_F08_0023.nc\"\n\njulia> filetype = jMtkFileType(filename)\n\"AS_LAND\"\n\n\n\n\n\n","category":"function"},{"location":"index.html#JMtk15.jMtkFileLGID","page":"Home","title":"JMtk15.jMtkFileLGID","text":"lgid = jMtkFileLGID(filename)\n\nPurpose:\n\nReturn the local granule ID of a MISR product file.\n\nLicensing:\n\nMtk C Library: Copyright © 2005 California Institute of Technology,   Caltech license.\nJulia wrapper: Copyright © 2023 Michel M. Verstraete,   MIT license.\n\nVersioning:\n\nMtk C Library: Version 1.5.\nJulia wrapper: Version 0.1.0 (2023-02-15).\n\nExample:\n\njulia> using JMtk15\n\njulia> filename = JMtk15_data * \"MISR/MISR_AM1_GRP_ELLIPSOID_GM_P168_O068050_BF_F03_0024.hdf\"\n\"/Users/michel/Codes/Julia/JMtk15/data/MISR/MISR_AM1_GRP_ELLIPSOID_GM_P168_O068050_BF_F03_0024.hdf\"\n\njulia> lgid = jMtkFileLGID(filename)\n\"MISR_AM1_GRP_ELLIPSOID_GM_P168_O068050_BF_F03_0024.hdf\"\n\n\n\n\n\n","category":"function"},{"location":"index.html#JMtk15.jMtkFileVersion","page":"Home","title":"JMtk15.jMtkFileVersion","text":"fversion = jMtkFileVersion(filename)\n\nPurpose:\n\nReturn the file version identifier of a MISR product file.\n\nLicensing:\n\nMtk C Library: Copyright © 2005 California Institute of Technology,   Caltech license.\nJulia wrapper: Copyright © 2023 Michel M. Verstraete,   MIT license.\n\nVersioning:\n\nMtk C Library: Version 1.5.\nJulia wrapper: Version 0.1.0 (2023-02-15).\n\nExample:\n\n```julia julia> using JMtk15\n\njulia> filename = JMtk15data * \"MISR/MISRAM1GRPELLIPSOIDGMP168O068050BFF030024.hdf\" \"/Users/michel/Codes/Julia/JMtk15/data/MISR/MISRAM1GRPELLIPSOIDGMP168O068050BFF03_0024.hdf\"\n\njulia> fversion = jMtkFileVersion(filename) \"F03_0024\" ````\n\n\n\n\n\n","category":"function"},{"location":"index.html#JMtk15.jMtkFillValueGet","page":"Home","title":"JMtk15.jMtkFillValueGet","text":"fillval = jMtkFillValueGet(filename, gridname, fieldname)\n\nPurose:\n\nReturn the fill value for a given MISR product filename, gridname, and fieldname.\n\nLicensing:\n\nMtk C Library: Copyright © 2005 California Institute of Technology,   Caltech license.\nJulia wrapper: Copyright © 2023 Michel M. Verstraete,   MIT license.\n\nVersioning:\n\nMtk C Library: Version 1.5.\nJulia wrapper: Version 0.1.0 (2023-02-15).\n\nNotes:\n\nMISR AGP files provide valid data everywhere, and thus do not feature fill data.\nFor all other MISR data files, the value of the first sample in the first   line is deemed to be a fill value.\n\nExamples:\n\njulia> using JMtk15\n\njulia> filename = JMtk15_data * \"MISR/MISR_AM1_GRP_TERRAIN_GM_P168_O068050_DA_F03_0024.hdf\"\n\"/Users/michel/Projects/MISR/MISR_Toolkit.1.5/JMtk15/data/MISR/MISR_AM1_GRP_TERRAIN_GM_P168_O068050_DA_F03_0024.hdf\"\n\njulia> gridname = \"RedBand\"\n\"RedBand\"\n\njulia> fieldname = \"Red Radiance/RDQI\"\n\"Red Radiance/RDQI\"\n\njulia> fillval = jMtkFillValueGet(filename, gridname, fieldname)\n65515\n\njulia> \n\njulia> gridname = \"BRF Conversion Factors\"\n\"BRF Conversion Factors\"\n\njulia> fieldname = \"BlueConversionFactor\"\n\"BlueConversionFactor\"\n\njulia> fillval = jMtkFillValueGet(filename, gridname, fieldname)\n-555\n\n\n\n\n\n","category":"function"},{"location":"index.html#JMtk15.jMtkFileAttrList","page":"Home","title":"JMtk15.jMtkFileAttrList","text":"attrcnt, attrlist = jMtkFileAttrList(filename);\n\nPurpose:\n\nList the attributes of a specified MISR product file.\n\nLicensing:\n\nMtk C Library: Copyright © 2005 California Institute of Technology,   Caltech license.\nJulia wrapper: Copyright © 2023 Michel M. Verstraete,   MIT license.\n\nVersioning:\n\nMtk C Library: Version 1.5.\nJulia wrapper: Version 0.1.0 (2023-02-15).\n\nExample:\n\njulia> using JMtk15\n\njulia> filename = JMtk15_data * \"MISR/MISR_AM1_GRP_ELLIPSOID_GM_P168_O068050_BF_F03_0024.hdf\"\n\"/Users/michel/Projects/MISR/MISR_Toolkit.1.5/JMtk15/data/MISR/MISR_AM1_GRP_ELLIPSOID_GM_P168_O068050_BF_F03_0024.hdf\"\n\njulia> attrcnt, attrlist = jMtkFileAttrList(filename);\n\njulia> attrcnt\n31\n\njulia> attrlist\n31-element Vector{String}:\n \"HDFEOSVersion\"\n \"StructMetadata.0\"\n \"Path_number\"\n \"AGP_version_id\"\n \"DID_version_id\"\n \"Number_blocks\"\n \"Ocean_blocks_size\"\n \"Ocean_blocks.count\"\n \"Ocean_blocks.numbers\"\n \"SOM_parameters.som_ellipsoid.a\"\n \"SOM_parameters.som_ellipsoid.e2\"\n \"SOM_parameters.som_orbit.aprime\"\n \"SOM_parameters.som_orbit.eprime\"\n \"SOM_parameters.som_orbit.gama\"\n \"SOM_parameters.som_orbit.nrev\"\n ⋮\n \"SOM_parameters.som_orbit.P2P1\"\n \"SOM_parameters.som_orbit.lambda0\"\n \"Origin_block.ulc.x\"\n \"Origin_block.ulc.y\"\n \"Origin_block.lrc.x\"\n \"Origin_block.lrc.y\"\n \"Start_block\"\n \"End block\"\n \"Cam_mode\"\n \"Num_local_modes\"\n \"Local_mode_site_name\"\n \"Orbit_QA\"\n \"Camera\"\n \"coremetadata\"\n\n\n\n\n\n","category":"function"},{"location":"index.html#JMtk15.jMtkFileAttrGet","page":"Home","title":"JMtk15.jMtkFileAttrGet","text":"attrval = jMtkFileAttrGet(filename, attrname)\n\nPurpose:\n\nReturn the value of an attribute for a specified file.\n\nLicensing:\n\nMtk C Library: Copyright © 2005 California Institute of Technology,   Caltech license.\nJulia wrapper: Copyright © 2023 Michel M. Verstraete,   MIT license.\n\nVersioning:\n\nMtk C Library: Version 1.5.\nJulia wrapper: Version 0.1.0 (2023-01-21).\n\nExample:\n\njulia> using JMtk15\n\njulia> filename = JMtk15_data * \"MISR/MISR_AM1_GRP_TERRAIN_GM_P168_O068050_DA_F03_0024.hdf\"\n\"/Users/michel/Codes/Julia/JMtk15/data/MISR/MISR_AM1_GRP_TERRAIN_GM_P168_O068050_DA_F03_0024.hdf\"\n\njulia> attrname = \"Path_number\"\n\"Path_number\"\n\njulia> attrval = jMtkFileAttrGet(filename, attrname)\n168\n\n\n\n\n\n","category":"function"},{"location":"index.html#JMtk15.jMtkGridAttrList","page":"Home","title":"JMtk15.jMtkGridAttrList","text":"nattrs, attrlist = jMtkGridAttrList(filename, gridname)\n\nPurpose:\n\nList the attributes for a specified grid/file.\n\nLicensing:\n\nMtk C Library: Copyright © 2005 California Institute of Technology,   Caltech license.\nJulia wrapper: Copyright © 2023 Michel M. Verstraete,   MIT license.\n\nVersioning:\n\nMtk C Library: Version 1.5.\nJulia wrapper: Version 0.1.0 (2023-02-15).\n\nExample:\n\njulia> using JMtk15\n\njulia> filename = JMtk15_data * \"MISR/MISR_AM1_GRP_TERRAIN_GM_P168_O068050_CF_F03_0024.hdf\"\n\"/Users/michel/Projects/MISR/MISR_Toolkit.1.5/JMtk15/data/MISR/MISR_AM1_GRP_TERRAIN_GM_P168_O068050_CF_F03_0024.hdf\"\n\njulia> gridname = \"RedBand\"\n\"RedBand\"\n\njulia> nattrs, attrlist = jMtkGridAttrList(filename, gridname);\n\njulia> nattrs\n7\n\njulia> attrlist\n7-element Vector{String}:\n \"Block_size.resolution_x\"\n \"Block_size.resolution_y\"\n \"Block_size.size_x\"\n \"Block_size.size_y\"\n \"Scale factor\"\n \"std_solar_wgted_height\"\n \"SunDistanceAU\"\n\n\n\n\n\n","category":"function"},{"location":"index.html#JMtk15.jMtkFieldAttrList","page":"Home","title":"JMtk15.jMtkFieldAttrList","text":"nattrs, attrlist = jMtkFieldAttrList(filename, fieldname)\n\nPurpose:\n\nList the attributes for a specified field.\n\nLicensing:\n\nMtk C Library: Copyright © 2005 California Institute of Technology,   Caltech license.\nJulia wrapper: Copyright © 2023 Michel M. Verstraete,   MIT license.\n\nVersioning:\n\nMtk C Library: Version 1.5.\nJulia wrapper: Version 0.1.0 (2023-02-15).\n\nExample:\n\njulia> using JMtk15\n\njulia> filename = JMtk15_data * \"MISR/MISR_AM1_TC_CLASSIFIERS_P168_O068050_F07_0012.hdf\"\n\"/Users/michel/Projects/MISR/MISR_Toolkit.1.5/JMtk15/data/MISR/MISR_AM1_TC_CLASSIFIERS_P168_O068050_F07_0012.hdf\"\n\njulia> fieldname = \"StandardEstimateCloudFraction\"\n\"StandardEstimateCloudFraction\"\n\njulia> nattrs, attrlist = jMtkFieldAttrList(filename, fieldname);\n\njulia> nattrs\n1\n\njulia> attrlist\n1-element Vector{String}:\n \"_FillValue\"\n\n\n\n\n\n","category":"function"},{"location":"index.html#JMtk15.jMtkFileToPath","page":"Home","title":"JMtk15.jMtkFileToPath","text":"path = jMtkFileToPath(filename)\n\nPurpose:\n\nReturn the path number for a MISR product file.\n\nLicensing:\n\nMtk C Library: Copyright © 2005 California Institute of Technology,   Caltech license.\nJulia wrapper: Copyright © 2023 Michel M. Verstraete,   MIT license.\n\nVersioning:\n\nMtk C Library: Version 1.5.\nJulia wrapper: Version 0.1.0 (2023-02-15).\n\nExample:\n\njulia> using JMtk15\n\njulia> filename = JMtk15_data * \"MISR/MISR_AM1_GRP_TERRAIN_GM_P168_O068050_CF_F03_0024.hdf\"\n\"/Users/michel/Codes/Julia/JMtk15/data/MISR/MISR_AM1_GRP_TERRAIN_GM_P168_O068050_CF_F03_0024.hdf\"\n\njulia> path = jMtkFileToPath(filename)\n168\n\n\n\n\n\n","category":"function"},{"location":"index.html#JMtk15.jMtkFileToOrbit","page":"Home","title":"JMtk15.jMtkFileToOrbit","text":"orbit = jMtkFileToOrbit(filename)\n\nPurpose:\n\nReturns the orbit number for a MISR product file.\n\nLicensing:\n\nMtk C Library: Copyright © 2005 California Institute of Technology,   Caltech license.\nJulia wrapper: Copyright © 2023 Michel M. Verstraete,   MIT license.\n\nVersioning:\n\nMtk C Library: Version 1.5.\nJulia wrapper: Version 0.1.0 (2023-02-15).\n\nExample:\n\njulia> using JMtk15\n\njulia> filename = JMtk15_data * \"MISR/MISR_AM1_GRP_TERRAIN_GM_P168_O068050_CF_F03_0024.hdf\"\n\"/Users/michel/Codes/Julia/JMtk15/data/MISR/MISR_AM1_GRP_TERRAIN_GM_P168_O068050_CF_F03_0024.hdf\"\n\njulia> orbit = jMtkFileToOrbit(filename)\n68050\n\n\n\n\n\n","category":"function"},{"location":"index.html#JMtk15.jMtkFileToBlockRange","page":"Home","title":"JMtk15.jMtkFileToBlockRange","text":"start_block, end_block = jMtkFileToBlockRange(filename)\n\nPurpose:\n\nReturn the starting and ending block numbers for a MISR product file.\n\nLicensing:\n\nMtk C Library: Copyright © 2005 California Institute of Technology,   Caltech license.\nJulia wrapper: Copyright © 2023 Michel M. Verstraete,   MIT license.\n\nVersioning:\n\nMtk C Library: Version 1.5.\nJulia wrapper: Version 0.1.0 (2023-02-15).\n\nExample:\n\njulia> using JMtk15\n\njulia> filename = JMtk15_data * \"/MISR/MISR_AM1_GRP_TERRAIN_GM_P168_O068050_CF_F03_0024.hdf\"\n\"/Users/michel/Codes/Julia/JMtk15/data//MISR/MISR_AM1_GRP_TERRAIN_GM_P168_O068050_CF_F03_0024.hdf\"\n\njulia> start_block, end_block = jMtkFileToBlockRange(filename)\n(19, 162)\n\n\n\n\n\n","category":"function"},{"location":"index.html#JMtk15.jMtkFileToGridList","page":"Home","title":"JMtk15.jMtkFileToGridList","text":"gridlist = jMtkFileToGridList(filename)\n\nPurpose:\n\nReturn a list of grid names for a MISR product file.\n\nLicensing:\n\nMtk C Library: Copyright © 2005 California Institute of Technology,   Caltech license.\nJulia wrapper: Copyright © 2023 Michel M. Verstraete,   MIT license.\n\nVersioning:\n\nMtk C Library: Version 1.5.\nJulia wrapper: Version 0.1.0 (2023-02-15).\n\nExample:\n\njulia> using JMtk15\n\njulia> filename = JMtk15_data * \"MISR/MISR_AM1_GRP_TERRAIN_GM_P168_O068050_CF_F03_0024.hdf\"\n\"./data/MISR/MISR_AM1_GRP_TERRAIN_GM_P168_O068050_CF_F03_0024.hdf\"\n\njulia> ngrids, gridlist = jMtkFileToGridList(filename);\n\njulia> ngrids\n6\n\njulia> gridlist\n6-element Vector{String}:\n \"BlueBand\"\n \"GreenBand\"\n \"RedBand\"\n \"NIRBand\"\n \"BRF Conversion Factors\"\n \"GeometricParameters\"\n\n\n\n\n\n","category":"function"},{"location":"index.html#JMtk15.jMtkFileGridToFieldList","page":"Home","title":"JMtk15.jMtkFileGridToFieldList","text":"nfields, fieldlist = jMtkFileGridToFieldList(filename, gridname)\n\nPurpose:\n\nReturn a string array of fields associated with a given gridname.\n\nLicensing:\n\nMtk C Library: Copyright © 2005 California Institute of Technology,   Caltech license.\nJulia wrapper: Copyright © 2023 Michel M. Verstraete,   MIT license.\n\nVersioning:\n\nMtk C Library: Version 1.5.\nJulia wrapper: Version 0.1.0 (2023-02-15).\n\nExample:\n\njulia> using JMtk15\n\njulia> filename = JMtk15_data * \"MISR/MISR_AM1_GRP_TERRAIN_GM_P168_O068050_AA_F03_0024.hdf\"\n\"/Users/michel/Codes/Julia/JMtk15/data/MISR/MISR_AM1_GRP_TERRAIN_GM_P168_O068050_AA_F03_0024.hdf\"\n\njulia> gridname = \"GreenBand\"\n\"GreenBand\"\n\njulia> nfields, fieldlist = jMtkFileGridToFieldList(filename, gridname);\n\njulia> nfields\n6\n\njulia> fieldlist\n6-element Vector{String}:\n \"Green Radiance/RDQI\"\n \"Green Radiance\"\n \"Green RDQI\"\n \"Green DN\"\n \"Green Equivalent Reflectance\"\n \"Green Brf\"\n\n\n\n\n\n","category":"function"},{"location":"index.html#JMtk15.jMtkFileGridToNativeFieldList","page":"Home","title":"JMtk15.jMtkFileGridToNativeFieldList","text":"nfields, fieldlist = jMtkFileGridToNativeFieldList(filename, gridname)\n\nPurpose:\n\nReturn a string array of native fields associated with a given grid (excludes derived fields).\n\nLicensing:\n\nMtk C Library: Copyright © 2005 California Institute of Technology,   Caltech license.\nJulia wrapper: Copyright © 2023 Michel M. Verstraete,   MIT license.\n\nVersioning:\n\nMtk C Library: Version 1.5.\nJulia wrapper: Version 0.1.0 (2023-02-15).\n\nExample:\n\njulia> using JMtk15\n\njulia> filename = JMtk15_data * \"MISR/MISR_AM1_GRP_TERRAIN_GM_P168_O068050_AA_F03_0024.hdf\"\n\"/Users/michel/Codes/Julia/JMtk15/data/MISR/MISR_AM1_GRP_TERRAIN_GM_P168_O068050_AA_F03_0024.hdf\"\n\njulia> gridname = \"BlueBand\"\n\"BlueBand\"\n\njulia> nfields, fieldlist = jMtkFileGridToNativeFieldList(filename, gridname);\n\njulia> nfields\n1\n\njulia> fieldlist\n1-element Vector{String}:\n \"Blue Radiance/RDQI\"\n\n\n\n\n\n","category":"function"},{"location":"index.html#JMtk15.jMtkFileGridFieldToDimList","page":"Home","title":"JMtk15.jMtkFileGridFieldToDimList","text":"ndims, dimnames, dimsizes = jMtkFileGridFieldToDimList(filename, gridname, fieldname)\n\nPurpose:\n\nReturn the dimension names and sizes for a given file, grid, and field.\n\nLicensing:\n\nMtk C Library: Copyright © 2005 California Institute of Technology,   Caltech license.\nJulia wrapper: Copyright © 2023 Michel M. Verstraete,   MIT license.\n\nVersioning:\n\nMtk C Library: Version 1.5.\nJulia wrapper: Version 0.1.0 (2023-02-15).\n\nExample:\n\njulia> using JMtk15\n\njulia> filename = JMtk15_data * \"MISR/MISR_AM1_AS_LAND_P168_O068050_F08_0023.nc\"\n\"/Users/michel/Codes/Julia/JMtk15/data/MISR/MISR_AM1_AS_LAND_P168_O068050_F08_0023.nc\"\n\njulia> gridname = \"1.1_KM_PRODUCTS\"\n\"1.1_KM_PRODUCTS\"\n\njulia> fieldname = \"Bidirectional_Reflectance_Factor\"\n\"Bidirectional_Reflectance_Factor\"\n\njulia> ndims, dimnames, dimsizes = jMtkFileGridFieldToDimList(filename, gridname, fieldname);\n\njulia> ndims\n2\n\njulia> dimnames\n2-element Vector{String}:\n \"Band_Dim\"\n \"Camera_Dim\"\n\njulia> dimsizes\n2-element Vector{Int32}:\n 4\n 9\n\n\n\n\n\n","category":"function"},{"location":"index.html#JMtk15.jMtkFileGridFieldCheck","page":"Home","title":"JMtk15.jMtkFileGridFieldCheck","text":"status = jMtkFileGridFieldCheck(filename, gridname, fieldname)\n\nPurpose:\n\nReturn \"SUCCESS\" (MTKt_status = 0) if the specified filename, gridname, and fieldname are valid,     or an error message otherwise.\n\nLicensing:\n\nMtk C Library: Copyright © 2005 California Institute of Technology,   Caltech license.\nJulia wrapper: Copyright © 2023 Michel M. Verstraete,   MIT license.\n\nVersioning:\n\nMtk C Library: Version 1.5.\nJulia wrapper: Version 0.1.0 (2023-02-15).\n\nExample:\n\njulia> using JMtk15\n\njulia> filename = JMtk15_data * \"MISR/MISR_AM1_GRP_TERRAIN_GM_P168_O068050_DA_F03_0024.hdf\"\n\"/Users/michel/Codes/Julia/JMtk15/data/MISR/MISR_AM1_GRP_TERRAIN_GM_P168_O068050_DA_F03_0024.hdf\"\n\njulia> gridname = \"NIRBand\"\n\"NIRBand\"\n\njulia> fieldname = \"NIR Radiance/RDQI\"\n\"NIR Radiance/RDQI\"\n\njulia> status = jMtkFileGridFieldCheck(filename, gridname, fieldname)\n\"SUCCESS\"\n\n\n\n\n\n","category":"function"},{"location":"index.html#JMtk15.jMtkFileGridFieldToDataType","page":"Home","title":"JMtk15.jMtkFileGridFieldToDataType","text":"datatype = jMtkFileGridFieldToDataType(filename, gridname, fieldname)\n\nPurpose:\n\nReturn the data type code of the given file/grid/field combination.\n\nLicensing:\n\nMtk C Library: Copyright © 2005 California Institute of Technology,   Caltech license.\nJulia wrapper: Copyright © 2023 Michel M. Verstraete,   MIT license.\n\nVersioning:\n\nMtk C Library: Version 1.5.\nJulia wrapper: Version 0.1.0 (2023-02-15).\n\nNote:\n\nIn line with the IDL version of this function, jMtkFileGridFieldToDataType returns the Julia data type of the field, rather than the C data type: for instance, Int32 rather than int, or Float64 rather than double.\n\nExample:\n\njulia> using JMtk15\n\njulia> filename = JMtk15_data * \"MISR/MISR_AM1_GRP_ELLIPSOID_GM_P168_O068050_DF_F03_0024.hdf\"\n\"/Users/michel/Codes/Julia/JMtk15/data/MISR/MISR_AM1_GRP_ELLIPSOID_GM_P168_O068050_DF_F03_0024.hdf\"\n\njulia> gridname = \"GreenBand\"\n\"GreenBand\"\n\njulia> fieldname = \"Green Radiance/RDQI\"\n\"Green Radiance/RDQI\"\n\njulia> datatype = jMtkFileGridFieldToDataType(filename, gridname, fieldname)\n\"uint16\"\n\n\n\n\n\n","category":"function"},{"location":"index.html#JMtk15.jMtkFileGridToResolution","page":"Home","title":"JMtk15.jMtkFileGridToResolution","text":"resolution = jMtkFileGridToResolution(filename, gridname)\n\nPurpose:\n\nReturn the resolution in meters of a given grid.\n\nLicensing:\n\nMtk C Library: Copyright © 2005 California Institute of Technology,   Caltech license.\nJulia wrapper: Copyright © 2023 Michel M. Verstraete,   MIT license.\n\nVersioning:\n\nMtk C Library: Version 1.5.\nJulia wrapper: Version 0.1.0 (2023-02-15).\n\nExample:\n\njulia> using JMtk15\n\njulia> filename = JMtk15_data * \"MISR/MISR_AM1_GRP_TERRAIN_GM_P168_O068050_AN_F03_0024.hdf\"\n\"/Users/michel/Codes/Julia/JMtk15/data/MISR/MISR_AM1_GRP_TERRAIN_GM_P168_O068050_AN_F03_0024.hdf\"\n\njulia> gridname = \"RedBand\"\n\"RedBand\"\n\njulia> resolution = jMtkFileGridToResolution(filename, gridname)\n275\n\n\n\n\n\n","category":"function"},{"location":"index.html#JMtk15.jMtkFileCoreMetaDataQuery","page":"Home","title":"JMtk15.jMtkFileCoreMetaDataQuery","text":"nparams, paramlist = jMtkFileCoreMetaDataQuery(filename)\n\nPurpose:\n\nReturn the number of coremetadata parameters and a list of all coremetadata     parameter names for a given file.\n\nLicensing:\n\nMtk C Library: Copyright © 2005 California Institute of Technology,   Caltech license.\nJulia wrapper: Copyright © 2023 Michel M. Verstraete,   MIT license.\n\nVersioning:\n\nMtk C Library: Version 1.5.\nJulia wrapper: Version 0.1.0 (2023-02-15).\n\nWARNING:\n\nThis function currently crashes when applied to GP_GMP data files.\n\nExample:\n\njulia> using JMtk15\n\njulia> filename = JMtk15_data * \"MISR/MISR_AM1_GRP_TERRAIN_GM_P168_O068050_AN_F03_0024.hdf\"\n\"/Users/michel/Codes/Julia/JMtk15/data/MISR/MISR_AM1_GRP_TERRAIN_GM_P168_O068050_AN_F03_0024.hdf\"\n\njulia> nparams, paramlist = jMtkFileCoreMetaDataQuery(filename);\n\njulia> nparams\n43\n\njulia> paramlist\n43-element Vector{String}:\n \"LOCALGRANULEID\"\n \"PRODUCTIONDATETIME\"\n \"LOCALVERSIONID\"\n \"PGEVERSION\"\n \"MEASUREDPARAMETERCONTAINER\"\n \"AUTOMATICQUALITYFLAGEXPLANATION\"\n \"AUTOMATICQUALITYFLAG\"\n \"QAPERCENTMISSINGDATA\"\n \"PARAMETERNAME\"\n \"ORBITCALCULATEDSPATIALDOMAINCONTAINER\"\n ⋮\n \"PARAMETERVALUE\"\n \"ADDITIONALATTRIBUTESCONTAINER\"\n \"ADDITIONALATTRIBUTENAME\"\n \"PARAMETERVALUE\"\n \"ASSOCIATEDPLATFORMINSTRUMENTSENSORCONTAINER\"\n \"ASSOCIATEDSENSORSHORTNAME\"\n \"ASSOCIATEDPLATFORMSHORTNAME\"\n \"OPERATIONMODE\"\n \"ASSOCIATEDINSTRUMENTSHORTNAME\"\n\n\n\n\n\n","category":"function"},{"location":"index.html#JMtk15.jMtkMakeFilename","page":"Home","title":"JMtk15.jMtkMakeFilename","text":"filename = jMtkMakeFilename(directory, product, camera, path, orbit, version)\n\nPurpose:\n\nReturn a MISR product file name given a base directory, product, camera, path, orbit,    and version.  Pass an empty string for any unwanted fields, such as camera.\n\nLicensing:\n\nMtk C Library: Copyright © 2005 California Institute of Technology,   Caltech license.\nJulia wrapper: Copyright © 2023 Michel M. Verstraete,   MIT license.\n\nVersioning:\n\nMtk C Library: Version 1.5.\nJulia wrapper: Version 0.1.0 (2023-02-15).\n\nWARNING: This function generates the correct filename but not the correct file extension\n\nfor NetCDF files (e.g., MISR AS_LAND or AEROSOLS products).\n\nExample:\n\njulia> using JMtk15\n\njulia> directory = \"../Mtk_testdata/in/\"\n\"../Mtk_testdata/in/\"\n\njulia> product = \"GRP_ELLIPSOID_GM\"\n\"GRP_ELLIPSOID_GM\"\n\njulia> camera = \"AA\"\n\"AA\"\n\njulia> path = 37\n37\n\njulia> orbit = 29058\n29058\n\njulia> version = \"F03_0024\"\n\"F03_0024\"\n\njulia> filename = jMtkMakeFilename(directory, product, camera, path, orbit, version)\n\"../Mtk_testdata/in/MISR_AM1_GRP_ELLIPSOID_GM_P037_O029058_AA_F03_0024.hdf\"\n\n\n\n\n\n","category":"function"},{"location":"index.html#JMtk15.jMtkFindFileList","page":"Home","title":"JMtk15.jMtkFindFileList","text":"filecnt, filenames = jMtkFindFileList(search_dir, product, camera, path, orbit, version)\n\nPurpose:\n\nReturn the file names found in a directory tree, using regular expressions.\n\nLicensing:\n\nMtk C Library: Copyright © 2005 California Institute of Technology,   Caltech license.\nJulia wrapper: Copyright © 2023 Michel M. Verstraete,   MIT license.\n\nVersioning:\n\nMtk C Library: Version 1.5.\nJulia wrapper: Version 0.1.0 (2023-02-15).\n\nWARNING 1: This function does not currently work to locate AGP files because the C code always expects an orbit number, which is absent from the filename of AGP files.\n\nWARNING 2: This function does not currently work to locate AS_LAND files because the C code always assumes the file extension is .hdf, instead of .nc for NetCDF files.\n\nNote: The C function MtkFindFileList of Mtk requires the input arguments\n\n`path` and `orbit` to be provided as zero-padded strings (and NOT integers)\nof 3 and 6 characters, respectively, but this Julia wrapper function includes\ncode to convert the usual integer inputs into the appropriate `Cstring`s.\n\nExample:\n\njulia> using JMtk15\n\njulia> search_dir = JMtk15_data * \"MISR/\"\n\"/Users/michel/Codes/Julia/JMtk15/data/MISR/\"\n\njulia> product = \"GRP_TERRAIN_GM\"\n\"GRP_TERRAIN_GM\"\n\njulia> camera = \".*\"\n\".*\"\n\njulia> path = 168\n168\n\njulia> orbit = 68050\n68050\n\njulia> version = \"F03_0024\"\n\"F03_0024\"\n\njulia> filecnt, filenames = jMtkFindFileList(search_dir, product, camera, path, orbit, version);\n\njulia> filecnt\n9\n\njulia> filenames\n9-element Vector{String}:\n \"/Users/michel/Codes/Julia/JMtk1\" ⋯ 33 bytes ⋯ \"GM_P168_O068050_AN_F03_0024.hdf\"\n \"/Users/michel/Codes/Julia/JMtk1\" ⋯ 33 bytes ⋯ \"GM_P168_O068050_CF_F03_0024.hdf\"\n \"/Users/michel/Codes/Julia/JMtk1\" ⋯ 33 bytes ⋯ \"GM_P168_O068050_CA_F03_0024.hdf\"\n \"/Users/michel/Codes/Julia/JMtk1\" ⋯ 33 bytes ⋯ \"GM_P168_O068050_DF_F03_0024.hdf\"\n \"/Users/michel/Codes/Julia/JMtk1\" ⋯ 33 bytes ⋯ \"GM_P168_O068050_DA_F03_0024.hdf\"\n \"/Users/michel/Codes/Julia/JMtk1\" ⋯ 33 bytes ⋯ \"GM_P168_O068050_AF_F03_0024.hdf\"\n \"/Users/michel/Codes/Julia/JMtk1\" ⋯ 33 bytes ⋯ \"GM_P168_O068050_AA_F03_0024.hdf\"\n \"/Users/michel/Codes/Julia/JMtk1\" ⋯ 33 bytes ⋯ \"GM_P168_O068050_BA_F03_0024.hdf\"\n \"/Users/michel/Codes/Julia/JMtk1\" ⋯ 33 bytes ⋯ \"GM_P168_O068050_BF_F03_0024.hdf\"\n\n\n\n\n\n","category":"function"},{"location":"index.html#JMtk15.jMtkFileBlockMetaList","page":"Home","title":"JMtk15.jMtkFileBlockMetaList","text":"nblockmeta, blockmetalist = jMtkFileBlockMetaList(filename)\n\nPurpose:\n\nList block metadata of a file.\n\nLicensing:\n\nMtk C Library: Copyright © 2005 California Institute of Technology,   Caltech license.\nJulia wrapper: Copyright © 2023 Michel M. Verstraete,   MIT license.\n\nVersioning:\n\nMtk C Library: Version 1.5.\nJulia wrapper: Version 0.1.0 (2023-02-15).\n\nExample:\n\njulia> using JMtk15\n\njulia> filename = JMtk15_data * \"MISR/MISR_AM1_GRP_TERRAIN_GM_P168_O068050_AN_F03_0024.hdf\"\n\"/Users/michel/Codes/Julia/JMtk15/data/MISR/MISR_AM1_GRP_TERRAIN_GM_P168_O068050_AN_F03_0024.hdf\"\n\njulia> nblockmeta, blockmetalist = jMtkFileBlockMetaList(filename);\n\njulia> nblockmeta\n3\n\njulia> blockmetalist\n3-element Vector{String}:\n \"PerBlockMetadataCommon\"\n \"PerBlockMetadataRad\"\n \"PerBlockMetadataTime\"\n\n\n\n\n\n","category":"function"},{"location":"index.html#JMtk15.jMtkFileBlockMetaFieldList","page":"Home","title":"JMtk15.jMtkFileBlockMetaFieldList","text":"nfields, fieldlist = jMtkFileBlockMetaFieldList(filename, blockmeta)\n\nPurpose:\n\nList block metadata fields of a file.\n\nLicensing:\n\nMtk C Library: Copyright © 2005 California Institute of Technology,   Caltech license.\nJulia wrapper: Copyright © 2023 Michel M. Verstraete,   MIT license.\n\nVersioning:\n\nMtk C Library: Version 1.5.\nJulia wrapper: Version 0.1.0 (2023-02-15).\n\nExample:\n\njulia> using JMtk15\n\njulia> filename = JMtk15_data * \"MISR/MISR_AM1_GRP_ELLIPSOID_GM_P168_O068050_AA_F03_0024.hdf\"\n\"/Users/michel/Codes/Julia/JMtk15/data/MISR/MISR_AM1_GRP_ELLIPSOID_GM_P168_O068050_AA_F03_0024.hdf\"\n\njulia> blockmeta = \"PerBlockMetadataCommon\"\n\"PerBlockMetadataCommon\"\n\njulia> nfields, fieldlist = jMtkFileBlockMetaFieldList(filename, blockmeta);\n\njulia> nfields\n7\n\njulia> fieldlist\n7-element Vector{String}:\n \"Block_number\"\n \"Ocean_flag\"\n \"Block_coor_ulc_som_meter.x\"\n \"Block_coor_ulc_som_meter.y\"\n \"Block_coor_lrc_som_meter.x\"\n \"Block_coor_lrc_som_meter.y\"\n \"Data_flag\"\n\n\n\n\n\n","category":"function"},{"location":"index.html#JMtk15.jMtkFileBlockMetaFieldRead","page":"Home","title":"JMtk15.jMtkFileBlockMetaFieldRead","text":"buffer = jMtkFileBlockMetaFieldRead(filename, blockmeta, fieldname)\n\nPurpose:\n\nRetrieve the block metadata fields of a file.\n\nLicensing:\n\nMtk C Library: Copyright © 2005 California Institute of Technology,   Caltech license.\nJulia wrapper: Copyright © 2023 Michel M. Verstraete,   MIT license.\n\nVersioning:\n\nMtk C Library: Version 1.5.\nJulia wrapper: Version 0.1.0 (2023-01-22).\n\nWARNING:\n\nThe @ccall mtklib.MtkStringListFree at the end of this function causes a segmentation fault...\n\nWARNING: This function appears to systematically return the blocks numbers for which data exist, rather than the values appropriate for thos blocks...\n\nExample:\n\njulia> using JMtk15\n\njulia> filename = JMtk15_data * \"MISR/MISR_AM1_GRP_ELLIPSOID_GM_P168_O068050_BA_F03_0024.hdf\"\n\"/Users/michel/Codes/Julia/JMtk15/data/MISR/MISR_AM1_GRP_ELLIPSOID_GM_P168_O068050_BA_F03_0024.hdf\"\n\njulia> blockmeta = \"PerBlockMetadataCommon\"\n\"PerBlockMetadataCommon\"\n\njulia> fieldname = \"Block_number\"\n\"Block_number\"\n\njulia> buffer = jMtkFileBlockMetaFieldRead(filename, blockmeta, fieldname)\n144-element Vector{Int64}:\n  19\n  20\n  21\n  22\n  23\n  24\n  25\n  26\n  27\n  28\n   ⋮\n 154\n 155\n 156\n 157\n 158\n 159\n 160\n 161\n 162\n\n\n\n\n\n","category":"function"},{"location":"index.html#JMtk15.jMtkTimeMetaRead","page":"Home","title":"JMtk15.jMtkTimeMetaRead","text":"timedata = jMtkTimeMetaRead(filename)\n\nPurpose:\n\nRetrieve time metadata from L1B2 Ellipsoid file for use with MTKPIXELTIME().\n\nLicensing:\n\nMtk C Library: Copyright © 2005 California Institute of Technology,   Caltech license.\nJulia wrapper: Copyright © 2023 Michel M. Verstraete,   MIT license.\n\nVersioning:\n\nMtk C Library: Version 1.5.\nJulia wrapper: Version 0.1.0 (2023-01-09).\n\nExample:\n\njulia> using JMtk15\n\njulia> filename = JMtk15_data * \"MISR/MISR_AM1_GRP_ELLIPSOID_GM_P168_O068050_AA_F03_0024.hdf\"\n\"/Users/michel/Codes/Julia/JMtk15/data/MISR/MISR_AM1_GRP_ELLIPSOID_GM_P168_O068050_AA_F03_0024.hdf\"\n\njulia> timedata = jMtkTimeMetaRead(filename);\n\njulia> timedata.path\n168\n\njulia> timedata.start_block\n19\n\njulia> timedata.end_block\n162\n\njulia> String(timedata.camera)\n\"AA\u0000\"\n\njulia> timedata.number_transform[21]\n2\n\njulia> String(timedata.ref_time[21][1])\n\"2012-10-03T07:35:53.095920Z\u0000\"\n\njulia> String(timedata.ref_time[21][2])\n\"2012-10-03T07:35:53.095920Z\u0000\"\n\njulia> timedata.start_line[21]\n2-element SVector{2, Int32} with indices SOneTo(2):\n 9728\n 9984\n\njulia> timedata.number_line[21]\n2-element SVector{2, Int32} with indices SOneTo(2):\n 256\n 256\n\njulia> timedata.coeff_line[21]\n6-element SVector{6, SVector{2, Float64}} with indices SOneTo(6):\n [311.20982008795704, 564.4506720815277]\n [0.9892057028398691, 0.9892008370019263]\n [-0.0034406040991434668, -0.004145231498701379]\n [1.0405266101925396e-5, 1.0395209103053846e-5]\n [-2.713647898637805e-6, -2.680038331177734e-6]\n [-3.664583734230783e-11, -1.70330365933894e-11]\n\njulia> timedata.som_ctr_x[21]\n2-element SVector{2, Float64} with indices SOneTo(2):\n  9856.0\n 10112.0\n\njulia> timedata.som_ctr_y[21]\n2-element SVector{2, Float64} with indices SOneTo(2):\n 1024.0\n 1024.0\n\n\n\n\n\n","category":"function"},{"location":"index.html#UnitConv","page":"Home","title":"UnitConv","text":"","category":"section"},{"location":"index.html","page":"Home","title":"Home","text":"jMtkDdToDegMinSec\njMtkDdToDms\njMtkDdToRad\njMtkDegMinSecToDd\njMtkDegMinSecToDms\njMtkDegMinSecToRad\njMtkDmsToDd\njMtkDmsToDegMinSec\njMtkDmsToRad\njMtkRadToDd\njMtkRadToDegMinSec\njMtkRadToDms","category":"page"},{"location":"index.html#JMtk15.jMtkDdToDegMinSec","page":"Home","title":"JMtk15.jMtkDdToDegMinSec","text":"degrees, minutes, seconds = jMtkDdToDegMinSec(decdeg)\n\nPurpose:\n\nConvert decimal degrees to degrees, minutes, and seconds.\n\nLicensing:\n\nMtk C Library: Copyright © 2005 California Institute of Technology,   Caltech license.\nJulia wrapper: Copyright © 2023 Michel M. Verstraete,   MIT license.\n\nVersioning:\n\nMtk C Library: Version 1.5.\nJulia wrapper: Version 0.1.0 (2023-02-15).\n\nExample:\n\n```julia julia> using JMtk15\n\njulia> decdeg = 65.5 65.5\n\njulia> degrees, minutes, seconds = jMtkDdToDegMinSec(decdeg);\n\njulia> degrees 65\n\njulia> minutes 30\n\njulia> seconds 0.0 ````\n\n\n\n\n\n","category":"function"},{"location":"index.html#JMtk15.jMtkDdToDms","page":"Home","title":"JMtk15.jMtkDdToDms","text":"packed_dms = jMtkDdToDms(decdeg)\n\nPurpose:\n\nConvert decimal degrees to packed degrees/minutes/seconds.\n\nLicensing:\n\nMtk C Library: Copyright © 2005 California Institute of Technology,   Caltech license.\nJulia wrapper: Copyright © 2023 Michel M. Verstraete,   MIT license.\n\nVersioning:\n\nMtk C Library: Version 1.5.\nJulia wrapper: Version 0.1.0 (2023-02-15).\n\nExample:\n\njulia> using JMtk15\n\njulia> decdeg = 65.5\n65.5\n\njulia> packed_dms = jMtkDdToDms(decdeg)\n6.503e7\n\n\n\n\n\n","category":"function"},{"location":"index.html#JMtk15.jMtkDdToRad","page":"Home","title":"JMtk15.jMtkDdToRad","text":"radians = jMtkDdToRad(decdeg)\n\nPurpose:\n\nConvert decimal degrees to radians.\n\nLicensing:\n\nMtk C Library: Copyright © 2005 California Institute of Technology,   Caltech license.\nJulia wrapper: Copyright © 2023 Michel M. Verstraete,   MIT license.\n\nVersioning:\n\nMtk C Library: Version 1.5.\nJulia wrapper: Version 0.1.0 (2023-02-15).\n\nExample:\n\n```julia julia> using JMtk15\n\njulia> decdeg = 65.55 65.55\n\njulia> radians = jMtkDdToRad(decdeg) 1.144063324682283 ````\n\n\n\n\n\n","category":"function"},{"location":"index.html#JMtk15.jMtkDegMinSecToDd","page":"Home","title":"JMtk15.jMtkDegMinSecToDd","text":"decdeg = jMtkDegMinSecToDd(deg, minutes, seconds)\n\nPurpose:\n\nConvert degrees, minutes, and seconds to decimal degrees.\n\nLicensing:\n\nMtk C Library: Copyright © 2005 California Institute of Technology,   Caltech license.\nJulia wrapper: Copyright © 2023 Michel M. Verstraete,   MIT license.\n\nVersioning:\n\nMtk C Library: Version 1.5.\nJulia wrapper: Version 0.1.0 (2023-02-15).\n\nExample:\n\njulia> using JMtk15\n\njulia> degrees = 65\n65\n\njulia> minutes = 33\n33\n\njulia> seconds = 0.001\n0.001\n\njulia> decdeg = jMtkDegMinSecToDd(degrees, minutes, seconds)\n65.55000027777777\n\n\n\n\n\n","category":"function"},{"location":"index.html#JMtk15.jMtkDegMinSecToDms","page":"Home","title":"JMtk15.jMtkDegMinSecToDms","text":"packed_dms = jMtkDegMinSecToDms(degrees, minutes, seconds)\n\nPurpose:\n\nConvert degrees, minutes, and seconds to packed degrees/minutes/seconds.\n\nLicensing:\n\nMtk C Library: Copyright © 2005 California Institute of Technology,   Caltech license.\nJulia wrapper: Copyright © 2023 Michel M. Verstraete,   MIT license.\n\nVersioning:\n\nMtk C Library: Version 1.5.\nJulia wrapper: Version 0.1.0 (2023-02-15).\n\nExample:\n\njulia> using JMtk15\n\njulia> degrees = 65\n65\n\njulia> minutes = 33\n33\n\njulia> seconds = 0.001\n0.001\n\njulia> packed_dms = jMtkDegMinSecToDms(degrees, minutes, seconds)\n6.5033000001e7\n\n\n\n\n\n","category":"function"},{"location":"index.html#JMtk15.jMtkDegMinSecToRad","page":"Home","title":"JMtk15.jMtkDegMinSecToRad","text":"radians = jMtkDegMinSecToRad(deg, minutes, seconds)\n\nPurpose:\n\nConvert degrees, minutes, and seconds to radians.\n\nLicensing:\n\nMtk C Library: Copyright © 2005 California Institute of Technology,   Caltech license.\nJulia wrapper: Copyright © 2023 Michel M. Verstraete,   MIT license.\n\nVersioning:\n\nMtk C Library: Version 1.5.\nJulia wrapper: Version 0.1.0 (2023-02-15).\n\nExample:\n\n```julia julia> using JMtk15\n\njulia> degrees = 65 65\n\njulia> minutes = 33 33\n\njulia> seconds = 0.001 0.001\n\njulia> radians = jMtkDegMinSecToRad(degrees, minutes, seconds) 1.1440633295304197 ````\n\n\n\n\n\n","category":"function"},{"location":"index.html#JMtk15.jMtkDmsToDd","page":"Home","title":"JMtk15.jMtkDmsToDd","text":"decdeg = jMtkDmsToDd(packed_dms)\n\nPurpose:\n\nConvert packed degrees/minutes/seconds to decimal degrees.\n\nLicensing:\n\nMtk C Library: Copyright © 2005 California Institute of Technology,   Caltech license.\nJulia wrapper: Copyright © 2023 Michel M. Verstraete,   MIT license.\n\nVersioning:\n\nMtk C Library: Version 1.5.\nJulia wrapper: Version 0.1.0 (2023-02-15).\n\nExample:\n\njulia> using JMtk15\n\njulia> packed_dms = 65033000.010\n6.503300001e7\n\njulia> decdeg = jMtkDmsToDd(packed_dms)\n65.5500027777772\n\n\n\n\n\n","category":"function"},{"location":"index.html#JMtk15.jMtkDmsToDegMinSec","page":"Home","title":"JMtk15.jMtkDmsToDegMinSec","text":"degrees, minutes, seconds = jMtkDmsToDegMinSec(packed_dms)\n\nPurpose:\n\nConvert packed degrees/minutes/seconds to degrees, minutes, and seconds.\n\nLicensing:\n\nMtk C Library: Copyright © 2005 California Institute of Technology,   Caltech license.\nJulia wrapper: Copyright © 2023 Michel M. Verstraete,   MIT license.\n\nVersioning:\n\nMtk C Library: Version 1.5.\nJulia wrapper: Version 0.1.0 (2023-02-15).\n\nExample:\n\njulia> using JMtk15\n\njulia> packed_dms = 65033000.010\n6.503300001e7\n\njulia> packed_dms = 65033011.1\n6.50330111e7\n\njulia> degrees, minutes, seconds = jMtkDmsToDegMinSec(packed_dms)\n(65, 33, 11.100000001490116)\n\n\n\n\n\n","category":"function"},{"location":"index.html#JMtk15.jMtkDmsToRad","page":"Home","title":"JMtk15.jMtkDmsToRad","text":"radians = jMtkDmsToRad(packed_dms)\n\nPurpose:\n\nConvert packed degrees/minutes/seconds to radians.\n\nLicensing:\n\nMtk C Library: Copyright © 2005 California Institute of Technology,   Caltech license.\nJulia wrapper: Copyright © 2023 Michel M. Verstraete,   MIT license.\n\nVersioning:\n\nMtk C Library: Version 1.5.\nJulia wrapper: Version 0.1.0 (2023-02-15).\n\nExample:\n\njulia> using JMtk15\n\njulia> packed_dms = 65033000.010\n6.503300001e7\n\njulia> radians = jMtkDmsToRad(packed_dms)\n1.144063373163641\n\n\n\n\n\n","category":"function"},{"location":"index.html#JMtk15.jMtkRadToDd","page":"Home","title":"JMtk15.jMtkRadToDd","text":"decdeg = jMtkRadToDd(radians)\n\nPurpose:\n\nConvert radians to decimal degrees.\n\nLicensing:\n\nMtk C Library: Copyright © 2005 California Institute of Technology,   Caltech license.\nJulia wrapper: Copyright © 2023 Michel M. Verstraete,   MIT license.\n\nVersioning:\n\nMtk C Library: Version 1.5.\nJulia wrapper: Version 0.1.0 (2023-02-15).\n\nExample:\n\n```julia julia> using JMtk15\n\njulia> radians = 1.1440634 1.1440634\n\njulia> decdeg = jMtkRadToDd(radians) 65.55000431538731\n\n\n\n\n\n","category":"function"},{"location":"index.html#JMtk15.jMtkRadToDegMinSec","page":"Home","title":"JMtk15.jMtkRadToDegMinSec","text":"degrees, minutes, seconds = jMtkRadToDegMinSec(radians)\n\nPurpose:\n\nConvert radians to degrees, minutes, and seconds.\n\nLicensing:\n\nMtk C Library: Copyright © 2005 California Institute of Technology,   Caltech license.\nJulia wrapper: Copyright © 2023 Michel M. Verstraete,   MIT license.\n\nVersioning:\n\nMtk C Library: Version 1.5.\nJulia wrapper: Version 0.1.0 (2023-02-15).\n\nExample:\n\n```julia julia> using JMtk15\n\njulia> radians = 1.14406333 1.14406333\n\njulia> degrees, minutes, seconds = jMtkRadToDegMinSec(radians) (65, 33, 0.0010968595743179321)\n\n\n\n\n\n","category":"function"},{"location":"index.html#JMtk15.jMtkRadToDms","page":"Home","title":"JMtk15.jMtkRadToDms","text":"packed_dms = jMtkRadToDms(radians)\n\nPurpose:\n\nConvert radians to packed degrees/minutes/seconds.\n\nLicensing:\n\nMtk C Library: Copyright © 2005 California Institute of Technology,   Caltech license.\nJulia wrapper: Copyright © 2023 Michel M. Verstraete,   MIT license.\n\nVersioning:\n\nMtk C Library: Version 1.5.\nJulia wrapper: Version 0.1.0 (2023-02-15).\n\nExample:\n\njulia> using JMtk15\n\njulia> radians = 1.14406332\n1.14406332\n\njulia> packed_dms = jMtkRadToDms(radians)\n1.008038627952e6\n\n\n\n\n\n","category":"function"},{"location":"index.html#CoordQuery","page":"Home","title":"CoordQuery","text":"","category":"section"},{"location":"index.html","page":"Home","title":"Home","text":"jMtkBlsToLatLon\njMtkBlsToSomXY\njMtkLatLonToBls\njMtkSomXYToBls\njMtkSomXYToLatLon\njMtkPathToProjParam\njMtkPathBlockRangeToBlockCorners","category":"page"},{"location":"index.html#JMtk15.jMtkBlsToLatLon","page":"Home","title":"JMtk15.jMtkBlsToLatLon","text":"latitude, longitude = jMtkBlsToLatLon(path, resolution, block, line, sample)\n\nPurpose:\n\nConvert from block, line and sample to latitude and longitude for a given MISR path    and resolution.\n\nLicensing:\n\nMtk C Library: Copyright © 2005 California Institute of Technology,   Caltech license.\nJulia wrapper: Copyright © 2023 Michel M. Verstraete,   MIT license.\n\nVersioning:\n\nMtk C Library: Version 1.5.\nJulia wrapper: Version 0.1.0 (2023-02-15).\n\nExample:\n\njulia> using JMtk15\n\njulia> path = 189\n189\n\njulia> resolution = 275\n275\n\njulia> block = 47\n47\n\njulia> line = 12.5\n12.5\n\njulia> sample = 50.5\n50.5\n\njulia> latitude, longitude = jMtkBlsToLatLon(path, resolution, block, line, sample)\n(55.16137325083296, 16.435317837222424)\n\n\n\n\n\n","category":"function"},{"location":"index.html#JMtk15.jMtkBlsToSomXY","page":"Home","title":"JMtk15.jMtkBlsToSomXY","text":"somx, somy = jMtkBlsToSomXY(path, resolution, block, line, sample)\n\nPurpose:\n\nConvert from block, line, and sample to Space Oblique Mercator (SOM) X and Y     coordinates for a given MISR path and resolution.\n\nLicensing:\n\nMtk C Library: Copyright © 2005 California Institute of Technology,   Caltech license.\nJulia wrapper: Copyright © 2023 Michel M. Verstraete,   MIT license.\n\nVersioning:\n\nMtk C Library: Version 1.5.\nJulia wrapper: Version 0.1.0 (2023-02-15).\n\nExample:\n\njulia> using JMtk15\n\njulia> path = 230\n230\n\njulia> resolution = 1100\n1100\n\njulia> block = 69\n69\n\njulia> line = 100.2\n100.2\n\njulia> sample = 89.9\n89.9\n\njulia> somx, somy = jMtkBlsToSomXY(path, resolution, block, line, sample)\n(1.7145919996643066e7, 222089.9932861328)\n\n\n\n\n\n","category":"function"},{"location":"index.html#JMtk15.jMtkLatLonToBls","page":"Home","title":"JMtk15.jMtkLatLonToBls","text":"block, line, sample = jMtkLatLonToBls(path, resolution, latitude, longitude)\n\nPurpose:\n\nConvert from decimal latitude and longitude to block, line, and sample for a given     MISR path and resolution.\n\nLicensing:\n\nMtk C Library: Copyright © 2005 California Institute of Technology,   Caltech license.\nJulia wrapper: Copyright © 2023 Michel M. Verstraete,   MIT license.\n\nVersioning:\n\nMtk C Library: Version 1.5.\nJulia wrapper: Version 0.1.0 (2023-02-15).\n\nExample:\n\njulia> using JMtk15\n\njulia> path = 160\n160\n\njulia> resolution = 1100\n1100\n\njulia> latitude = 57.1\n57.1\n\njulia> longitude = 65.7\n65.7\n\njulia> block, line, sample = jMtkLatLonToBls(path, resolution, latitude, longitude)\n(45, 19.521484f0, 207.88611f0)\n\n\n\n\n\n","category":"function"},{"location":"index.html#JMtk15.jMtkSomXYToBls","page":"Home","title":"JMtk15.jMtkSomXYToBls","text":"block, line, sample = jMtkSomXYToBls(path, resolution, somx, somy)\n\nPurpose:\n\nConvert from Space Oblique Mercator (SOM) X and Y coordinates to block, line, and    sample for a given MISR path and resolution.\n\nLicensing:\n\nMtk C Library: Copyright © 2005 California Institute of Technology,   Caltech license.\nJulia wrapper: Copyright © 2023 Michel M. Verstraete,   MIT license.\n\nVersioning:\n\nMtk C Library: Version 1.5.\nJulia wrapper: Version 0.1.0 (2023-02-15).\n\nExample:\n\njulia> using JMtk15\n\njulia> path = 230\n230\n\njulia> resolution = 1100\n1100\n\njulia> somx = 17145920.0\n1.714592e7\n\njulia> somy = 222090.0\n222090.0\n\njulia> block, line, sample = jMtkSomXYToBls(path, resolution, somx, somy)\n(69, 100.200195f0, 89.899994f0)\n\n\n\n\n\n","category":"function"},{"location":"index.html#JMtk15.jMtkSomXYToLatLon","page":"Home","title":"JMtk15.jMtkSomXYToLatLon","text":"latitude, longitude = jMtkSomXYToLatLon(path, somx, somy)\n\nPurpose:\n\nConverts from Space Oblique Mercator (SOM) X and Y coordinates to decimal latitude    and longitude or a given MISR path.\n\nLicensing:\n\nMtk C Library: Copyright © 2005 California Institute of Technology,   Caltech license.\nJulia wrapper: Copyright © 2023 Michel M. Verstraete,   MIT license.\n\nVersioning:\n\nMtk C Library: Version 1.5.\nJulia wrapper: Version 0.1.0 (2023-02-15).\n\nExample:\n\njulia> using JMtk15\n\njulia> path = 230\n230\n\njulia> somx = 17145920.0\n1.714592e7\n\njulia> somy = 222090.0\n222090.0\n\njulia> latitude, longitude = jMtkSomXYToLatLon(path, somx, somy)\n(26.737612422281604, -54.149627910796426)\n\n\n\n\n\n","category":"function"},{"location":"index.html#JMtk15.jMtkPathToProjParam","page":"Home","title":"JMtk15.jMtkPathToProjParam","text":"proj_params = jMtkPathToProjParam(path, resolution)\n\nPurpose:\n\nReturn the projection parameters for the given path and resolution.\n\nLicensing:\n\nMtk C Library: Copyright © 2005 California Institute of Technology,   Caltech license.\nJulia wrapper: Copyright © 2023 Michel M. Verstraete,   MIT license.\n\nVersioning:\n\nMtk C Library: Version 1.5.\nJulia wrapper: Version 0.1.0 (2023-02-15).\n\nExample:\n\njulia> using JMtk15\n\njulia> path = 160\n160\n\njulia> resolution = 275\n275\n\njulia> proj_params = jMtkPathToProjParam(path, resolution)\nJMtk15.MTKt_MisrProjParam(160, 22, -1, 12, [6.378137e6, -0.006694348, 0.0, 9.8018013752e7, -1.1705401692154506e8, 0.0, 0.0, 0.0, 98.88, 0.0, 0.0, 180.0, 0.0, 0.0, 0.0], [7.46075e6, 1.09065e6], [7.60155e6, 527450.0], 180, 512, 2048, Float32[0.0, 64.0, 0.0, 64.0, 0.0, 0.0, 0.0, 64.0, 0.0, 0.0  …  0.0, 0.0, 64.0, 0.0, 0.0, 64.0, 0.0, 0.0, 64.0, 0.0], 275)\n\njulia> proj_params.path\n160\n\njulia> proj_params.projcode\n22\n\njulia> proj_params.zonecode\n-1\n\njulia> proj_params.spherecode\n12\n\njulia> proj_params.projparam\n15-element SVector{15, Float64} with indices SOneTo(15):\n   6.378137e6\n  -0.006694348\n   0.0\n   9.8018013752e7\n  -1.1705401692154506e8\n   0.0\n   0.0\n   0.0\n  98.88\n   0.0\n   0.0\n 180.0\n   0.0\n   0.0\n   0.0\n\njulia> proj_params.ulc\n2-element SVector{2, Float64} with indices SOneTo(2):\n 7.46075e6\n 1.09065e6\n\njulia> proj_params.lrc\n2-element SVector{2, Float64} with indices SOneTo(2):\n 7.60155e6\n 527450.0\n\njulia> proj_params.nblock\n180\n\njulia> proj_params.nline\n512\n\njulia> proj_params.nsample\n2048\n\njulia> proj_params.reloffset\n179-element SVector{179, Float32} with indices SOneTo(179):\n  0.0\n 64.0\n  0.0\n 64.0\n  0.0\n  0.0\n  0.0\n 64.0\n  0.0\n  0.0\n  ⋮\n  0.0\n 64.0\n  0.0\n  0.0\n 64.0\n  0.0\n  0.0\n 64.0\n  0.0\n\njulia> proj_params.resolution\n275\n\n\n\n\n\n","category":"function"},{"location":"index.html#JMtk15.jMtkPathBlockRangeToBlockCorners","page":"Home","title":"JMtk15.jMtkPathBlockRangeToBlockCorners","text":"block_corners = jMtkPathBlockRangeToBlockCorners(path, start_block, end_block)\n\nPurpose:\n\nReturn block corner coordinates in decimal degrees of latitude and longitude     for a given path and block range. Coordinates returned are with respect to     the pixel center of the upper left corner, center and lower right corner     of each block.\n\nLicensing:\n\nMtk C Library: Copyright © 2005 California Institute of Technology,   Caltech license.\nJulia wrapper: Copyright © 2023 Michel M. Verstraete,   MIT license.\n\nVersioning:\n\nMtk C Library: Version 1.5.\nJulia wrapper: Version 0.1.0 (2023-02-15).\n\nNotes:\n\nMISR blocks are numbered from 1 (near the North pole) to 180 (near the South pole).\nC and IDL arrays use 0-based array indexing, but Julia arrays use 1-based array indexing.\nTo store information about block n in a C or IDL array at the same index value, that   array must contain 181 elements (from 0 to 180), where the first one (index 0) is ignored.\nWhen the C function returns such an array to Julia, it is stored in an array of 181   elements (from 1 to 181), where the first one (index 1) is also ignored.\nHence the information about block n is located in the Julia array at element n + 1.\nWhen requesting information about a limited range of blocks, the coordinates for all other blocks are not computed, and therefore returned as zeros.\n\nExample:\n\nRequire information about the corner coordinates of blocks 50 to 53, which are to be found in elements 51 to 54 of the output variable block_corners:\n\njulia> using JMtk15\n\njulia> path = 37\n37\n\njulia> start_block = 50\n50\n\njulia> end_block = 53\n53\n\njulia> block_corners = jMtkPathBlockRangeToBlockCorners(path, start_block, end_block);\n\njulia> block_corners.block[50]\nMTKt_GeoBlock(0, MTKt_GeoCoord(0.0, 0.0), MTKt_GeoCoord(0.0, 0.0), MTKt_GeoCoord(0.0, 0.0),\n    MTKt_GeoCoord(0.0, 0.0), MTKt_GeoCoord(0.0, 0.0))\n\njulia> block_corners.block[51]\nMTKt_GeoBlock(50, MTKt_GeoCoord(51.50172788126263, -110.34181235426887),\n    MTKt_GeoCoord(50.55921476448539, -102.45622291180113),\n    MTKt_GeoCoord(50.47619474545069, -106.54373076847435),\n    MTKt_GeoCoord(49.33239267609881, -102.91557271102047),\n    MTKt_GeoCoord(50.25072514075242, -110.60484537214862))\n\njulia> block_corners.block[53]\nMTKt_GeoBlock(52, MTKt_GeoCoord(49.014067408014164, -111.09560823489086),\n    MTKt_GeoCoord(48.133868087931134, -103.58257839548311),\n    MTKt_GeoCoord(48.012765787402664, -107.4704148885336),\n    MTKt_GeoCoord(46.90188427533023, -103.99047252579555),\n    MTKt_GeoCoord(47.76117892385338, -111.3306357462539))\n\njulia> block_corners.block[54]\nMTKt_GeoBlock(53, MTKt_GeoCoord(47.77794661143779, -111.56393495460624),\n    MTKt_GeoCoord(46.93334647883273, -104.2166987821375),\n    MTKt_GeoCoord(46.79114534637805, -108.01472259273179),\n    MTKt_GeoCoord(45.69864278727337, -104.5996858571367),\n    MTKt_GeoCoord(46.52405645775748, -111.78423927666803))\n\njulia> block_corners.block[55]\nMTKt_GeoBlock(0, MTKt_GeoCoord(0.0, 0.0), MTKt_GeoCoord(0.0, 0.0), MTKt_GeoCoord(0.0, 0.0),\n    MTKt_GeoCoord(0.0, 0.0), MTKt_GeoCoord(0.0, 0.0))\n\n\n\n\n\n","category":"function"},{"location":"index.html#MapQuery","page":"Home","title":"MapQuery","text":"","category":"section"},{"location":"index.html","page":"Home","title":"Home","text":"jMtkLSToLatLon\njMtkLSToSomXY\njMtkLatLonToLS\njMtkSomXYToLS","category":"page"},{"location":"index.html#JMtk15.jMtkLSToLatLon","page":"Home","title":"JMtk15.jMtkLSToLatLon","text":"latitude, longitude = jMtkLSToLatLon(mapinfo, line, sample)\n\nPurpose:\n\nReturn a decimal latitude/longitude pair given a line and sample.\n\nLicensing:\n\nMtk C Library: Copyright © 2005 California Institute of Technology,   Caltech license.\nJulia wrapper: Copyright © 2023 Michel M. Verstraete,   MIT license.\n\nVersioning:\n\nMtk C Library: Version 1.5.\nJulia wrapper: Version 0.1.0 (2023-02-15).\n\nExample:\n\njulia> using JMtk15\n\njulia> filename = JMtk15_data * \"MISR/MISR_AM1_GRP_TERRAIN_GM_P168_O068050_CF_F03_0024.hdf\"\n\"/Users/michel/Codes/Julia/JMtk15/data/MISR/MISR_AM1_GRP_TERRAIN_GM_P168_O068050_CF_F03_0024.hdf\"\n\njulia> path = jMtkFileToPath(filename)\n168\n\njulia> start_block = 110\n110\n\njulia> end_block = 110\n110\n\njulia> region = jMtkSetRegionByPathBlockRange(path, start_block, end_block)\nMTKt_Region(MTKt_GeoCenter(MTKt_GeoCoord(-24.479478582488763, 32.028724322255464)), MTKt_Extent(70262.5, 281462.5))\n\njulia> gridname = \"GreenBand\"\n\"GreenBand\"\n\njulia> fieldname = \"Green Radiance/RDQI\"\n\"Green Radiance/RDQI\"\n\njulia> databuf, mapinfo = jMtkReadData(filename, gridname, fieldname, region)\n(UInt16[0xffeb 0xffeb … 0xffeb 0xffeb; 0xffeb 0xffeb … 0xffeb 0xffeb; … ; 0xffeb 0xffeb … 0xffeb 0xffeb; 0xffeb 0xffeb … 0xffeb 0xffeb], MTKt_MapInfo(168, 110, 110, 1100, 4, 128, 512, JMtk15.MTK_TRUE, MTKt_SomRegion(168, MTKt_SomCoord(2.28085e7, -633600.0), MTKt_SomCoord(2.287835e7, -352550.0), MTKt_SomCoord(2.29482e7, -71500.0)), MTKt_GeoRegion(MTKt_GeoCoord(-23.58709279748763, 29.353665543180618), MTKt_GeoCoord(-24.0676258508188, 34.84437551586123), MTKt_GeoCoord(-24.479478582488763, 32.028724322255464), MTKt_GeoCoord(-25.323930208545036, 34.740509109113106), MTKt_GeoCoord(-24.838877358123973, 29.195643744542547)), MTKt_MisrProjParam(168, 22, -1, 12, [6.378137e6, -0.006694348, 0.0, 9.8018013752e7, -1.3001505477562232e8, 0.0, 0.0, 0.0, 98.88, 0.0, 0.0, 180.0, 0.0, 0.0, 0.0], [7.46075e6, 1.09065e6], [7.60155e6, 527450.0], 180, 128, 512, Float32[0.0, 16.0, 0.0, 16.0, 0.0, 0.0, 0.0, 16.0, 0.0, 0.0  …  0.0, 0.0, 16.0, 0.0, 0.0, 16.0, 0.0, 0.0, 16.0, 0.0], 1100)))\n\njulia> line = 50.0\n50.0\n\njulia> sample = 125.0\n125.0\n\njulia> latitude, longitude = jMtkLSToLatLon(mapinfo, line, sample)\n(-24.216289492769953, 30.63597054987332)\n\n\n\n\n\n","category":"function"},{"location":"index.html#JMtk15.jMtkLSToSomXY","page":"Home","title":"JMtk15.jMtkLSToSomXY","text":"somx, somy = jMtkLSToSomXY(mapinfo, line, sample)\n\nPurpose:\n\nReturn the Space Oblique Mercator (SOM) X and Y given a line and sample.\n\nLicensing:\n\nMtk C Library: Copyright © 2005 California Institute of Technology,   Caltech license.\nJulia wrapper: Copyright © 2023 Michel M. Verstraete,   MIT license.\n\nVersioning:\n\nMtk C Library: Version 1.5.\nJulia wrapper: Version 0.1.0 (2023-02-15).\n\nExample:\n\njulia> using JMtk15\n\njulia> filename = JMtk15_data * \"MISR/MISR_AM1_GRP_TERRAIN_GM_P168_O068050_CF_F03_0024.hdf\"\n\"/Users/michel/Projects/MISR/MISR_Toolkit.1.5/JMtk15/data/MISR/MISR_AM1_GRP_TERRAIN_GM_P168_O068050_CF_F03_0024.hdf\"\n\njulia> path = jMtkFileToPath(filename)\n168\n\njulia> start_block = 110\n110\n\njulia> end_block = 110\n110\n\njulia> region = jMtkSetRegionByPathBlockRange(path, start_block, end_block)\nMTKt_Region(MTKt_GeoCenter(MTKt_GeoCoord(-24.479478582488763, 32.028724322255464)), MTKt_Extent(70262.5, 281462.5))\n\njulia> gridname = \"GreenBand\"\n\"GreenBand\"\n\njulia> fieldname = \"Green Radiance/RDQI\"\n\"Green Radiance/RDQI\"\n\njulia> databuf, mapinfo = jMtkReadData(filename, gridname, fieldname, region)\n(UInt16[0xe000 0xe000 … 0xe000 0xe000; 0xffff 0xffff … 0xffff 0xffff; … ; 0x7fee 0x7fee … 0x7fee 0x7fee; 0x0000 0x0000 … 0x0000 0x0000], MTKt_MapInfo(168, 110, 110, 1100, 4, 128, 512, JMtk15.MTK_TRUE, MTKt_SomRegion(168, MTKt_SomCoord(2.28085e7, -633600.0), MTKt_SomCoord(2.287835e7, -352550.0), MTKt_SomCoord(2.29482e7, -71500.0)), MTKt_GeoRegion(MTKt_GeoCoord(-23.58709279748763, 29.353665543180618), MTKt_GeoCoord(-24.0676258508188, 34.84437551586123), MTKt_GeoCoord(-24.479478582488763, 32.028724322255464), MTKt_GeoCoord(-25.323930208545036, 34.740509109113106), MTKt_GeoCoord(-24.838877358123973, 29.195643744542547)), MTKt_MisrProjParam(168, 22, -1, 12, [6.378137e6, -0.006694348, 0.0, 9.8018013752e7, -1.3001505477562232e8, 0.0, 0.0, 0.0, 98.88, 0.0, 0.0, 180.0, 0.0, 0.0, 0.0], [7.46075e6, 1.09065e6], [7.60155e6, 527450.0], 180, 128, 512, Float32[0.0, 16.0, 0.0, 16.0, 0.0, 0.0, 0.0, 16.0, 0.0, 0.0  …  0.0, 0.0, 16.0, 0.0, 0.0, 16.0, 0.0, 0.0, 16.0, 0.0], 1100)))\n\njulia> line = 50.0\n50.0\n\njulia> sample = 125.0\n125.0\n\njulia> somx, somy = jMtkLSToSomXY(mapinfo, line, sample)\n(2.28635e7, -496100.0)\n\n\n\n\n\n","category":"function"},{"location":"index.html#JMtk15.jMtkLatLonToLS","page":"Home","title":"JMtk15.jMtkLatLonToLS","text":"line, sample = jMtkLatLonToLS(mapinfo, latitude, longitude)\n\nPurpose:\n\nReturn a line and sample, given a decimal latitude/longitude pair.\n\nLicensing:\n\nMtk C Library: Copyright © 2005 California Institute of Technology,   Caltech license.\nJulia wrapper: Copyright © 2023 Michel M. Verstraete,   MIT license.\n\nVersioning:\n\nMtk C Library: Version 1.5.\nJulia wrapper: Version 0.1.0 (2023-02-15).\n\nExample:\n\njulia> using JMtk15\n\njulia> filename = JMtk15_data * \"MISR/MISR_AM1_GRP_TERRAIN_GM_P168_O068050_CF_F03_0024.hdf\"\n\"/Users/michel/Codes/Julia/JMtk15/data/MISR/MISR_AM1_GRP_TERRAIN_GM_P168_O068050_CF_F03_0024.hdf\"\n\njulia> path = jMtkFileToPath(filename)\n168\n\njulia> start_block = 110\n110\n\njulia> end_block = 110\n110\n\njulia> region = jMtkSetRegionByPathBlockRange(path, start_block, end_block)\nMTKt_Region(MTKt_GeoCenter(MTKt_GeoCoord(-24.479478582488763, 32.028724322255464)), MTKt_Extent(70262.5, 281462.5))\n\njulia> gridname = \"GreenBand\"\n\"GreenBand\"\n\njulia> fieldname = \"Green Radiance/RDQI\"\n\"Green Radiance/RDQI\"\n\njulia> databuf, mapinfo = jMtkReadData(filename, gridname, fieldname, region)\n(UInt16[0xffeb 0xffeb … 0xffeb 0xffeb; 0xffeb 0xffeb … 0xffeb 0xffeb; … ; 0xffeb 0xffeb … 0xffeb 0xffeb; 0xffeb 0xffeb … 0xffeb 0xffeb], MTKt_MapInfo(168, 110, 110, 1100, 4, 128, 512, JMtk15.MTK_TRUE, MTKt_SomRegion(168, MTKt_SomCoord(2.28085e7, -633600.0), MTKt_SomCoord(2.287835e7, -352550.0), MTKt_SomCoord(2.29482e7, -71500.0)), MTKt_GeoRegion(MTKt_GeoCoord(-23.58709279748763, 29.353665543180618), MTKt_GeoCoord(-24.0676258508188, 34.84437551586123), MTKt_GeoCoord(-24.479478582488763, 32.028724322255464), MTKt_GeoCoord(-25.323930208545036, 34.740509109113106), MTKt_GeoCoord(-24.838877358123973, 29.195643744542547)), MTKt_MisrProjParam(168, 22, -1, 12, [6.378137e6, -0.006694348, 0.0, 9.8018013752e7, -1.3001505477562232e8, 0.0, 0.0, 0.0, 98.88, 0.0, 0.0, 180.0, 0.0, 0.0, 0.0], [7.46075e6, 1.09065e6], [7.60155e6, 527450.0], 180, 128, 512, Float32[0.0, 16.0, 0.0, 16.0, 0.0, 0.0, 0.0, 16.0, 0.0, 0.0  …  0.0, 0.0, 16.0, 0.0, 0.0, 16.0, 0.0, 0.0, 16.0, 0.0], 1100)))\n\njulia> latitude = -24.216289\n-24.216289\n\njulia> longitude = 30.635970\n30.63597\n\njulia> line, sample = jMtkLatLonToLS(mapinfo, latitude, longitude)\n(49.999954f0, 124.99995f0)\n\n\n\n\n\n","category":"function"},{"location":"index.html#JMtk15.jMtkSomXYToLS","page":"Home","title":"JMtk15.jMtkSomXYToLS","text":"line, sample = jMtkSomXYToLS(mapinfo, somx, somy)\n\nPurpose:\n\nReturn a map line and sample, given Space Oblique Mercator (SOM) X and Y.\n\nLicensing:\n\nMtk C Library: Copyright © 2005 California Institute of Technology,   Caltech license.\nJulia wrapper: Copyright © 2023 Michel M. Verstraete,   MIT license.\n\nVersioning:\n\nMtk C Library: Version 1.5.\nJulia wrapper: Version 0.1.0 (2023-02-15).\n\nExample:\n\njulia> using JMtk15\n\njulia> filename = JMtk15_data * \"MISR/MISR_AM1_GRP_TERRAIN_GM_P168_O068050_CF_F03_0024.hdf\"\n\"/Users/michel/Codes/Julia/JMtk15/data/MISR/MISR_AM1_GRP_TERRAIN_GM_P168_O068050_CF_F03_0024.hdf\"\n\njulia> path = jMtkFileToPath(filename)\n168\n\njulia> start_block = 110\n110\n\njulia> end_block = 110\n110\n\njulia> region = jMtkSetRegionByPathBlockRange(path, start_block, end_block)\nMTKt_Region(MTKt_GeoCenter(MTKt_GeoCoord(-24.479478582488763, 32.028724322255464)), MTKt_Extent(70262.5, 281462.5))\n\njulia> gridname = \"GreenBand\"\n\"GreenBand\"\n\njulia> fieldname = \"Green Radiance/RDQI\"\n\"Green Radiance/RDQI\"\n\njulia> databuf, mapinfo = jMtkReadData(filename, gridname, fieldname, region)\n(UInt16[0xffeb 0xffeb … 0xffeb 0xffeb; 0xffeb 0xffeb … 0xffeb 0xffeb; … ; 0xffeb 0xffeb … 0xffeb 0xffeb; 0xffeb 0xffeb … 0xffeb 0xffeb], MTKt_MapInfo(168, 110, 110, 1100, 4, 128, 512, JMtk15.MTK_TRUE, MTKt_SomRegion(168, MTKt_SomCoord(2.28085e7, -633600.0), MTKt_SomCoord(2.287835e7, -352550.0), MTKt_SomCoord(2.29482e7, -71500.0)), MTKt_GeoRegion(MTKt_GeoCoord(-23.58709279748763, 29.353665543180618), MTKt_GeoCoord(-24.0676258508188, 34.84437551586123), MTKt_GeoCoord(-24.479478582488763, 32.028724322255464), MTKt_GeoCoord(-25.323930208545036, 34.740509109113106), MTKt_GeoCoord(-24.838877358123973, 29.195643744542547)), MTKt_MisrProjParam(168, 22, -1, 12, [6.378137e6, -0.006694348, 0.0, 9.8018013752e7, -1.3001505477562232e8, 0.0, 0.0, 0.0, 98.88, 0.0, 0.0, 180.0, 0.0, 0.0, 0.0], [7.46075e6, 1.09065e6], [7.60155e6, 527450.0], 180, 128, 512, Float32[0.0, 16.0, 0.0, 16.0, 0.0, 0.0, 0.0, 16.0, 0.0, 0.0  …  0.0, 0.0, 16.0, 0.0, 0.0, 16.0, 0.0, 0.0, 16.0, 0.0], 1100)))\n\njulia> somx = 2.28635e7\n2.28635e7\n\njulia> somy = -496100.0\n-496100.0\n\njulia> line, sample = jMtkSomXYToLS(mapinfo, somx, somy)\n(50.0f0, 125.0f0)\n\n\n\n\n\n","category":"function"},{"location":"index.html#OrbitPath","page":"Home","title":"OrbitPath","text":"","category":"section"},{"location":"index.html","page":"Home","title":"Home","text":"jMtkLatLonToPathList\njMtkRegionToPathList\njMtkRegionPathToBlockRange\njMtkOrbitToPath\njMtkTimeToOrbitPath\njMtkTimeRangeToOrbitList\njMtkPathTimeRangeToOrbitList\njMtkOrbitToTimeRange","category":"page"},{"location":"index.html#JMtk15.jMtkLatLonToPathList","page":"Home","title":"JMtk15.jMtkLatLonToPathList","text":"path_cnt, path_list = jMtkLatLonToPathList(latitude, longitude)\n\nPurpose:\n\nReturn all paths intersecting a given latitude/longitude pair.\n\nLicensing:\n\nMtk C Library: Copyright © 2005 California Institute of Technology,   Caltech license.\nJulia wrapper: Copyright © 2023 Michel M. Verstraete,   MIT license.\n\nVersioning:\n\nMtk C Library: Version 1.5.\nJulia wrapper: Version 0.1.0 (2023-02-15).\n\nExample:\n\njulia> using JMtk15\n\njulia> latitude = 66.121646\n66.121646\n\njulia> longitude = 89.263022\n89.263022\n\njulia> path_cnt, path_list = jMtkLatLonToPathList(latitude, longitude);\n\njulia> path_cnt\n17\n\njulia> path_list\n17-element Vector{Int32}:\n   7\n   8\n   9\n  10\n  11\n  12\n  13\n  14\n 146\n 147\n 148\n 149\n 150\n 151\n 152\n 153\n 154\n\n\n\n\n\n","category":"function"},{"location":"index.html#JMtk15.jMtkRegionToPathList","page":"Home","title":"JMtk15.jMtkRegionToPathList","text":"path_cnt, path_list = jMtkRegionToPathList(region)\n\nPurpose:\n\nReturn a list of paths intersecting a given region.\n\nLicensing:\n\nMtk C Library: Copyright © 2005 California Institute of Technology,   Caltech license.\nJulia wrapper: Copyright © 2023 Michel M. Verstraete,   MIT license.\n\nVersioning:\n\nMtk C Library: Version 1.5.\nJulia wrapper: Version 0.1.0 (2023-02-15).\n\nExample:\n\njulia> using JMtk15\n\njulia> center_lat = 40.0\n40.0\n\njulia> center_lon = -120.0\n-120.0\n\njulia> lat_extent = 0.1\n0.1\n\njulia> lon_extent = 0.1\n0.1\n\njulia> extent_units = \"degrees\"\n\"degrees\"\n\njulia> region = jMtkSetRegionByLatLonExtent(center_lat, center_lon, lat_extent, lon_extent, extent_units)\nMTKt_Region(MTKt_GeoCenter(MTKt_GeoCoord(40.0, -120.0)), MTKt_Extent(5556.641805555556, 5556.641805555556))\n\njulia> path_cnt, path_list = jMtkRegionToPathList(region);\n\njulia> path_cnt\n5\n\njulia> path_list\n5-element Vector{Int32}:\n 41\n 42\n 43\n 44\n 45\n\n\n\n\n\n","category":"function"},{"location":"index.html#JMtk15.jMtkRegionPathToBlockRange","page":"Home","title":"JMtk15.jMtkRegionPathToBlockRange","text":"start_block, end_block = jMtkRegionPathToBlockRange(region, path)\n\nPurpose:\n\nReturn a starting and ending block for a given path and region.\n\nLicensing:\n\nMtk C Library: Copyright © 2005 California Institute of Technology,   Caltech license.\nJulia wrapper: Copyright © 2023 Michel M. Verstraete,   MIT license.\n\nVersioning:\n\nMtk C Library: Version 1.5.\nJulia wrapper: Version 0.1.0 (2023-02-15).\n\nExample:\n\njulia> using JMtk15\n\njulia> path = 37\n37\n\njulia> center_lat = 66.0\n66.0\n\njulia> center_lon = -89.0\n-89.0\n\njulia> lat_extent = 10.0\n10.0\n\njulia> lon_extent = 10.0\n10.0\n\njulia> extent_units = \"degrees\"\n\"degrees\"\n\njulia> region = jMtkSetRegionByLatLonExtent(center_lat, center_lon, lat_extent, lon_extent, extent_units)\nMTKt_Region(MTKt_GeoCenter(MTKt_GeoCoord(66.0, -89.0)), MTKt_Extent(555664.1805555556, 555664.1805555556))\n\njulia> start_block, end_block = jMtkRegionPathToBlockRange(region, path);\n\njulia> start_block\n32\n\njulia> end_block\n40\n\n\n\n\n\n","category":"function"},{"location":"index.html#JMtk15.jMtkOrbitToPath","page":"Home","title":"JMtk15.jMtkOrbitToPath","text":"path = jMtkOrbitToPath(orbit)\n\nPurpose:\n\nReturn the path corresponding to the given orbit.\n\nLicensing:\n\nMtk C Library: Copyright © 2005 California Institute of Technology,   Caltech license.\nJulia wrapper: Copyright © 2023 Michel M. Verstraete,   MIT license.\n\nVersioning:\n\nMtk C Library: Version 1.5.\nJulia wrapper: Version 0.1.0 (2023-02-15).\n\nExample:\n\njulia> using JMtk15\n\njulia> orbit = 29058\n29058\n\njulia> path = jMtkOrbitToPath(orbit)\n37\n\n\n\n\n\n","category":"function"},{"location":"index.html#JMtk15.jMtkTimeToOrbitPath","page":"Home","title":"JMtk15.jMtkTimeToOrbitPath","text":"orbit, path = jMtkTimeToOrbitPath(datetime)\n\nPurpose:\n\nReturn an orbit and corresponding path given a time.\n\nLicensing:\n\nMtk C Library: Copyright © 2005 California Institute of Technology,   Caltech license.\nJulia wrapper: Copyright © 2023 Michel M. Verstraete,   MIT license.\n\nVersioning:\n\nMtk C Library: Version 1.5.\nJulia wrapper: Version 0.1.0 (2023-02-15).\n\nExample:\n\njulia> using JMtk15\n\njulia> datetime = \"2005-02-02T02:00:00Z\"\n\"2005-02-02T02:00:00Z\"\n\njulia> orbit, path = jMtkTimeToOrbitPath(datetime)\n(27271, 104)\n\n\n\n\n\n","category":"function"},{"location":"index.html#JMtk15.jMtkTimeRangeToOrbitList","page":"Home","title":"JMtk15.jMtkTimeRangeToOrbitList","text":"orbit_cnt, orbit_list = jMtkTimeRangeToOrbitList(start_time, end_time)\n\nPurpose:\n\nReturn a list of orbits given a period of time.\n\nLicensing:\n\nMtk C Library: Copyright © 2005 California Institute of Technology,   Caltech license.\nJulia wrapper: Copyright © 2023 Michel M. Verstraete,   MIT license.\n\nVersioning:\n\nMtk C Library: Version 1.5.\nJulia wrapper: Version 0.1.0 (2023-02-15).\n\nExample:\n\njulia> using JMtk15\n\njulia> start_time = \"2005-02-02T02:00:00Z\"\n\"2005-02-02T02:00:00Z\"\n\njulia> end_time = \"2005-02-02T03:00:00Z\"\n\"2005-02-02T03:00:00Z\"\n\njulia> orbit_cnt, orbit_list = jMtkTimeRangeToOrbitList(start_time, end_time);\n\njulia> orbit_cnt\n2\n\njulia> orbit_list\n2-element Vector{Int32}:\n 27271\n 27272\n\n\n\n\n\n","category":"function"},{"location":"index.html#JMtk15.jMtkPathTimeRangeToOrbitList","page":"Home","title":"JMtk15.jMtkPathTimeRangeToOrbitList","text":"orbit_cnt, orbit_list = jMtkPathTimeRangeToOrbitList(path, start_time, end_time)\n\nPurpose:\n\nReturn the list of all orbits corresponding to a given path and period of time.\n\nLicensing:\n\nMtk C Library: Copyright © 2005 California Institute of Technology,   Caltech license.\nJulia wrapper: Copyright © 2023 Michel M. Verstraete,   MIT license.\n\nVersioning:\n\nMtk C Library: Version 1.5.\nJulia wrapper: Version 0.1.0 (2023-02-02).\n\nExample:\n\njulia> using JMtk15\n\njulia> path = 37\n37\n\njulia> start_time = \"2002-02-02T02:00:00Z\"\n\"2002-02-02T02:00:00Z\"\n\njulia> end_time = \"2002-05-02T02:00:00Z\"\n\"2002-05-02T02:00:00Z\"\n\njulia> orbit_cnt, orbit_list = jMtkPathTimeRangeToOrbitList(path, start_time, end_time)\n(6, Int32[11350, 11583, 11816, 12049, 12282, 12515])\n\n\n\n\n\n","category":"function"},{"location":"index.html#JMtk15.jMtkOrbitToTimeRange","page":"Home","title":"JMtk15.jMtkOrbitToTimeRange","text":"start_time, end_time = jMtkOrbitToTimeRange(orbit)\n\nPurpose:\n\nReturn the start time and end time for a given orbit, expressed in the form yyyy-mm-ddThh:mm:ssZ.\n\nLicensing:\n\nMtk C Library: Copyright © 2005 California Institute of Technology,   Caltech license.\nJulia wrapper: Copyright © 2023 Michel M. Verstraete,   MIT license.\n\nVersioning:\n\nMtk C Library: Version 1.5.\nJulia wrapper: Version 0.1.0 (2023-02-15).\n\nExample:\n\njulia> using JMtk15\n\njulia> orbit = 32467\n32467\n\njulia> start_time, end_time = jMtkOrbitToTimeRange(orbit)\n(\"2006-01-24T19:56:53Z\", \"2006-01-24T21:35:46Z\")\n\n\n\n\n\n","category":"function"},{"location":"index.html#SetRegion","page":"Home","title":"SetRegion","text":"","category":"section"},{"location":"index.html","page":"Home","title":"Home","text":"jMtkSetRegionByPathBlockRange\njMtkSetRegionByUlcLrc\njMtkSetRegionByLatLonExtent\njMtkSetRegionByPathSomUlcLrc\njMtkSnapToGrid","category":"page"},{"location":"index.html#JMtk15.jMtkSetRegionByPathBlockRange","page":"Home","title":"JMtk15.jMtkSetRegionByPathBlockRange","text":"region = jMtkSetRegionByPathBlockRange(path, start_block, end_block)\n\nPurpose:\n\nCreate a region structure that defines an approximate region of interest    given a MISR path and block range. This structure is used as input to    other MTK routines, Mtk_ReadData in particular.\n\nLicensing:\n\nMtk C Library: Copyright © 2005 California Institute of Technology,   Caltech license.\nJulia wrapper: Copyright © 2023 Michel M. Verstraete,   MIT license.\n\nVersioning:\n\nMtk C Library: Version 1.5.\nJulia wrapper: Version 0.1.0 (2023-02-15).\n\nExample:\n\njulia> using JMtk15\n\njulia> path = 37\n37\n\njulia> start_block = 32\n32\n\njulia> end_block = 40\n40\n\njulia> region = jMtkSetRegionByPathBlockRange(path, start_block, end_block);\n\njulia> region\nMTKt_Region(MTKt_GeoCenter(MTKt_GeoCoord(67.28628518822661, -95.22204196033839)), MTKt_Extent(633462.5, 307862.5))\n\njulia> region.geo\nMTKt_GeoCenter(MTKt_GeoCoord(67.28628518822661, -95.22204196033839))\n\njulia> region.geo.ctr\nMTKt_GeoCoord(67.28628518822661, -95.22204196033839)\n\njulia> region.geo.ctr.lat\n67.28628518822661\n\njulia> region.geo.ctr.lon\n-95.22204196033839\n\njulia> region.hextent\nMTKt_Extent(633462.5, 307862.5)\n\njulia> region.hextent.xlat\n633462.5\n\njulia> region.hextent.ylon\n307862.5\n\n\n\n\n\n","category":"function"},{"location":"index.html#JMtk15.jMtkSetRegionByUlcLrc","page":"Home","title":"JMtk15.jMtkSetRegionByUlcLrc","text":"region = jMtkSetRegionByUlcLrc(ul_lat, ul_lon, lr_lat, lr_lon)\n\nPurpose:\n\nCreate a region structure that defines an approximate region of interest given    upper left corner and lower right corner latitude/longitude coordinates. This    structure is used as input to other MTK routines, Mtk_ReadData in particular. \n\nLicensing:\n\nMtk C Library: Copyright © 2005 California Institute of Technology,   Caltech license.\nJulia wrapper: Copyright © 2023 Michel M. Verstraete,   MIT license.\n\nVersioning:\n\nMtk C Library: Version 1.5.\nJulia wrapper: Version 0.1.0 (2023-02-15).\n\nExample:\n\njulia> using JMtk15\n\njulia> ul_lat = 67.0\n67.0\n\njulia> ul_lon = -90.0\n-90.0\n\njulia> lr_lat = 65.0\n65.0\n\njulia> lr_lon = -88.0\n-88.0\n\njulia> region = jMtkSetRegionByUlcLrc(ul_lat, ul_lon, lr_lat, lr_lon);\n\njulia> region\nMTKt_Region(MTKt_GeoCenter(MTKt_GeoCoord(66.0, -89.0)), MTKt_Extent(111319.54315, 111319.54315))\n\njulia> region.geo\nMTKt_GeoCenter(MTKt_GeoCoord(66.0, -89.0))\n\njulia> region.geo.ctr\nMTKt_GeoCoord(66.0, -89.0)\n\njulia> region.geo.ctr.lat\n66.0\n\njulia> region.geo.ctr.lon\n-89.0\n\njulia> region.hextent\nMTKt_Extent(111319.54315, 111319.54315)\n\njulia> region.hextent.xlat\n111319.54315\n\njulia> region.hextent.ylon\n111319.54315\n\n\n\n\n\n","category":"function"},{"location":"index.html#JMtk15.jMtkSetRegionByLatLonExtent","page":"Home","title":"JMtk15.jMtkSetRegionByLatLonExtent","text":"region = jMtkSetRegionByLatLonExtent(center_lat, center_lon, lat_extent, lon_extent, extent_units)\n\nPurpose:\n\nCreate a region structure that defines an approximate region of interest     given a center latitude/longitude coordinate and a latitudinal/longitudinal     full extent in specified units of degrees, meters, kilometers, or pixels.     This structure is used as input to other MTK routines, Mtk_ReadData in particular.\n\nLicensing:\n\nMtk C Library: Copyright © 2005 California Institute of Technology,   Caltech license.\nJulia wrapper: Copyright © 2023 Michel M. Verstraete,   MIT license.\n\nVersioning:\n\nMtk C Library: Version 1.5.\nJulia wrapper: Version 0.1.0 (2023-02-15).\n\nExample:\n\njulia> using JMtk15\n\njulia> center_lat = 66.0\n66.0\n\njulia> center_lon = -89.0\n-89.0\n\njulia> lat_extent = 111000.0\n111000.0\n\njulia> lon_extent = 111000.0\n111000.0\n\njulia> extent_units = \"meters\"\n\"meters\"\n\njulia> region = jMtkSetRegionByLatLonExtent(center_lat, center_lon, lat_extent, lon_extent, extent_units);\n\njulia> region\nMTKt_Region(MTKt_GeoCenter(MTKt_GeoCoord(66.0, -89.0)), MTKt_Extent(55500.0, 55500.0))\n\njulia> region.geo\nMTKt_GeoCenter(MTKt_GeoCoord(66.0, -89.0))\n\njulia> region.geo.ctr\nMTKt_GeoCoord(66.0, -89.0)\n\njulia> region.geo.ctr.lat\n66.0\n\njulia> region.geo.ctr.lon\n-89.0\n\njulia> region.hextent\nMTKt_Extent(55500.0, 55500.0)\n\njulia> region.hextent.xlat\n55500.0\n\njulia> region.hextent.ylon\n55500.0\n\n\n\n\n\n","category":"function"},{"location":"index.html#JMtk15.jMtkSetRegionByPathSomUlcLrc","page":"Home","title":"JMtk15.jMtkSetRegionByPathSomUlcLrc","text":"region = jMtkSetRegionByPathSomUlcLrc(path, ulc_som_x, ulc_som_y, lrc_som_x, lrc_som_y)\n\nPurpose:\n\nSet a region by path and upper left and lower right SOM X/Y.\n\nLicensing:\n\nMtk C Library: Copyright © 2005 California Institute of Technology,   Caltech license.\nJulia wrapper: Copyright © 2023 Michel M. Verstraete,   MIT license.\n\nVersioning:\n\nMtk C Library: Version 1.5.\nJulia wrapper: Version 0.1.0 (2023-02-15).\n\nExample:\n\njulia> using JMtk15\n\njulia> path = 27\n27\n\njulia> ulc_som_x = 15600000.0\n1.56e7\n\njulia> ulc_som_y = -300.0\n-300.0\n\njulia> lrc_som_x = 16800000.0\n1.68e7\n\njulia> lrc_som_y = 2000.0\n2000.0\n\njulia> region = jMtkSetRegionByPathSomUlcLrc(path, ulc_som_x, ulc_som_y, lrc_som_x, lrc_som_y)\nMTKt_Region(MTKt_GeoCenter(MTKt_GeoCoord(35.38461751504492, -102.05138161671469)), MTKt_Extent(600137.5, 1287.5))\n\njulia> region.geo\nMTKt_GeoCenter(MTKt_GeoCoord(35.38461751504492, -102.05138161671469))\n\njulia> region.geo.ctr\nMTKt_GeoCoord(35.38461751504492, -102.05138161671469)\n\njulia> region.geo.ctr.lat\n35.38461751504492\n\njulia> region.geo.ctr.lon\n-102.05138161671469\n\njulia> region.hextent\nMTKt_Extent(600137.5, 1287.5)\n\njulia> region.hextent.xlat\n600137.5\n\njulia> region.hextent.ylon\n1287.5\n\n\n\n\n\n","category":"function"},{"location":"index.html#JMtk15.jMtkSnapToGrid","page":"Home","title":"JMtk15.jMtkSnapToGrid","text":"mapinfo = jMtkSnapToGrid(path, resolution, region)\n\nPurpose:\n\nSnap a region of interest to a MISR grid given a path, resolution and a region    structure. It is not typically called directly, instead it is used by    MtkReadData and MtkReadRaw to adjust the region defined by the SetRegion    routines to the grid of the MISR product file to read.    The MtkReadData and MtkReadRaw routines always return data on a MISR grid    approximated by the region, no spatial interpolation is performed (only block    assembly). This routines does the snap from region to grid. It may be useful    to perform region to map to coordinate computations without actually reading data.\n\nLicensing:\n\nMtk C Library: Copyright © 2005 California Institute of Technology,   Caltech license.\nJulia wrapper: Copyright © 2023 Michel M. Verstraete,   MIT license.\n\nVersioning:\n\nMtk C Library: Version 1.5.\nJulia wrapper: Version 0.1.0 (2023-02-15).\n\nExample:\n\njulia> using JMtk15\n\njulia> path = 37\n37\n\njulia> resolution = 275\n275\n\njulia> center_lat = 66.0\n66.0\n\njulia> center_lon = -89.0\n-89.0\n\njulia> lat_extent = 1.5\n1.5\n\njulia> lon_extent = 1.0\n1.0\n\njulia> extent_units = \"degrees\"\n\"degrees\"\n\njulia> region = jMtkSetRegionByLatLonExtent(center_lat, center_lon, lat_extent, lon_extent, extent_units)\nMTKt_Region(MTKt_GeoCenter(MTKt_GeoCoord(66.0, -89.0)), MTKt_Extent(83349.62708333334, 55566.41805555556))\n\njulia> mapinfo = jMtkSnapToGrid(path, resolution, region)\nMTKt_MapInfo(37, 36, 37, 275, 1, 704, 512, JMtk15.MTK_TRUE, MTKt_SomRegion(37, MTKt_SomCoord(1.23888875e7, 1.0555875e6), MTKt_SomCoord(1.248555e7, 1.12585e6), MTKt_SomCoord(1.25822125e7, 1.1961125e6)), MTKt_GeoRegion(MTKt_GeoCoord(67.03179518448705, -89.53826724255391), MTKt_GeoCoord(66.46099499099165, -86.6996155055143), MTKt_GeoCoord(65.97799363748135, -89.06552066214442), MTKt_GeoCoord(64.92346880942577, -88.62870412735786), MTKt_GeoCoord(65.45901952920984, -91.34071802836039)), MTKt_MisrProjParam(37, 22, -1, 12, [6.378137e6, -0.006694348, 0.0, 9.8018013752e7, 7.20080175848927e7, 0.0, 0.0, 0.0, 98.88, 0.0, 0.0, 180.0, 0.0, 0.0, 0.0], [7.46075e6, 1.09065e6], [7.60155e6, 527450.0], 180, 512, 2048, Float32[0.0, 64.0, 0.0, 64.0, 0.0, 0.0, 0.0, 64.0, 0.0, 0.0  …  0.0, 0.0, 64.0, 0.0, 0.0, 64.0, 0.0, 0.0, 64.0, 0.0], 275))\n\njulia> mapinfo.path\n37\n\njulia> mapinfo.start_block\n36\n\njulia> mapinfo.end_block\n37\n\njulia> mapinfo.resolution\n275\n\njulia> mapinfo.resfactor\n1\n\njulia> mapinfo.nline\n704\n\njulia> mapinfo.nsample\n512\n\njulia> mapinfo.pixelcenter\nMTK_TRUE::MTKt_boolean = 0x00000001\n\njulia> mapinfo.som\nMTKt_SomRegion(37, MTKt_SomCoord(1.23888875e7, 1.0555875e6), MTKt_SomCoord(1.248555e7, 1.12585e6), MTKt_SomCoord(1.25822125e7, 1.1961125e6))\n\njulia> mapinfo.som.path\n37\n\njulia> mapinfo.som.ulc\nMTKt_SomCoord(1.23888875e7, 1.0555875e6)\n\njulia> mapinfo.som.ulc.x\n1.23888875e7\n\njulia> mapinfo.som.ulc.y\n1.0555875e6\n\njulia> mapinfo.som.ctr\nMTKt_SomCoord(1.248555e7, 1.12585e6)\n\njulia> mapinfo.som.ctr.x\n1.248555e7\n\njulia> mapinfo.som.ctr.y\n1.12585e6\n\njulia> mapinfo.som.lrc\nMTKt_SomCoord(1.25822125e7, 1.1961125e6)\n\njulia> mapinfo.som.lrc.x\n1.25822125e7\n\njulia> mapinfo.som.lrc.y\n1.1961125e6\n\njulia> mapinfo.geo\nMTKt_GeoRegion(MTKt_GeoCoord(67.03179518448705, -89.53826724255391), MTKt_GeoCoord(66.46099499099165, -86.6996155055143), MTKt_GeoCoord(65.97799363748135, -89.06552066214442), MTKt_GeoCoord(64.92346880942577, -88.62870412735786), MTKt_GeoCoord(65.45901952920984, -91.34071802836039))\n\njulia> mapinfo.geo.ulc\nMTKt_GeoCoord(67.03179518448705, -89.53826724255391)\n\njulia> mapinfo.geo.ulc.lat\n67.03179518448705\n\njulia> mapinfo.geo.ulc.lon\n-89.53826724255391\n\njulia> mapinfo.geo.urc\nMTKt_GeoCoord(66.46099499099165, -86.6996155055143)\n\njulia> mapinfo.geo.urc.lat\n66.46099499099165\n\njulia> mapinfo.geo.urc.lon\n-86.6996155055143\n\njulia> mapinfo.geo.ctr\nMTKt_GeoCoord(65.97799363748135, -89.06552066214442)\n\njulia> mapinfo.geo.ctr.lat\n65.97799363748135\n\njulia> mapinfo.geo.ctr.lon\n-89.06552066214442\n\njulia> mapinfo.geo.lrc\nMTKt_GeoCoord(64.92346880942577, -88.62870412735786)\n\njulia> mapinfo.geo.lrc.lat\n64.92346880942577\n\njulia> mapinfo.geo.lrc.lon\n-88.62870412735786\n\njulia> mapinfo.geo.llc\nMTKt_GeoCoord(65.45901952920984, -91.34071802836039)\n\njulia> mapinfo.geo.llc.lat\n65.45901952920984\n\njulia> mapinfo.geo.llc.lon\n-91.34071802836039\n\njulia> mapinfo.pp\nMTKt_MisrProjParam(37, 22, -1, 12, [6.378137e6, -0.006694348, 0.0, 9.8018013752e7, 7.20080175848927e7, 0.0, 0.0, 0.0, 98.88, 0.0, 0.0, 180.0, 0.0, 0.0, 0.0], [7.46075e6, 1.09065e6], [7.60155e6, 527450.0], 180, 512, 2048, Float32[0.0, 64.0, 0.0, 64.0, 0.0, 0.0, 0.0, 64.0, 0.0, 0.0  …  0.0, 0.0, 64.0, 0.0, 0.0, 64.0, 0.0, 0.0, 64.0, 0.0], 275)\n\njulia> mapinfo.pp.path\n37\n\njulia> mapinfo.pp.projcode\n22\n\njulia> mapinfo.pp.zonecode\n-1\n\njulia> mapinfo.pp.spherecode\n12\n\njulia> mapinfo.pp.projparam\n15-element SVector{15, Float64} with indices SOneTo(15):\n   6.378137e6\n  -0.006694348\n   0.0\n   9.8018013752e7\n   7.20080175848927e7\n   0.0\n   0.0\n   0.0\n  98.88\n   0.0\n   0.0\n 180.0\n   0.0\n   0.0\n   0.0\n\njulia> mapinfo.pp.ulc\n2-element SVector{2, Float64} with indices SOneTo(2):\n 7.46075e6\n 1.09065e6\n\njulia> mapinfo.pp.lrc\n2-element SVector{2, Float64} with indices SOneTo(2):\n 7.60155e6\n 527450.0\n\njulia> mapinfo.pp.nblock\n180\n\njulia> mapinfo.pp.nline\n512\n\njulia> mapinfo.pp.nsample\n2048\n\njulia> mapinfo.pp.nsample\n2048\n\njulia> \n\njulia> mapinfo.pp.reloffset\n179-element SVector{179, Float32} with indices SOneTo(179):\n  0.0\n 64.0\n  0.0\n 64.0\n  0.0\n  0.0\n  0.0\n 64.0\n  0.0\n  0.0\n  ⋮\n  0.0\n 64.0\n  0.0\n  0.0\n 64.0\n  0.0\n  0.0\n 64.0\n  0.0\n\njulia> mapinfo.pp.resolution\n275\n\n\n\n\n\n","category":"function"}]
}
